<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Python学习笔记 | 带你了解Python</title>
    <url>/2020/12/13/Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%20-%20%E5%B8%A6%E4%BD%A0%E4%BA%86%E8%A7%A3Python/</url>
    <content><![CDATA[<h1 id="1-Python介绍"><a href="#1-Python介绍" class="headerlink" title="1 Python介绍"></a>1 Python介绍</h1><hr>
<h2 id="1-1-Python简介"><a href="#1-1-Python简介" class="headerlink" title="1.1 Python简介"></a>1.1 Python简介</h2><ul>
<li>Python 的 3.0 版本相对于 Python 的早期版本，这是一个较大的升级。为了不带入过多的累赘，Python 3.0在设计的时候没有考虑向下兼容。官方已经停止了对Python 2 的更新。<a id="more"></a></li>
<li>Python 是一门简单易学且功能强大的编程语言。它拥有高效的高级数据结构，并且能够用简单而又高效的方式进行面向对象编程。Python优雅的语法和动态类型，再结合它的解释性，使其在大多数平台的许多领域成为编写脚本或开发应用程序的理想语言。</li>
<li>Python 是一个高层次的结合了解释性、编译性、互动性和面向对象的脚本语言。Python的设计具有很强的可读性，相比其他语言经常使用英文关键字，其他语言的一些标点符号，它具有比其他语言更有特色语法结构。</li>
<li>Python 是一种解释型语言： 意味着开发过程中没有了编译这个环节。</li>
<li>Python 是交互式语言： 意味着可以在一个 Python 提示符 &gt;&gt;&gt; 后直接执行代码</li>
<li>Python 是面向对象语言: 意味着Python支持面向对象的风格或代码封装在对象的编程技术</li>
</ul>
<h2 id="1-2-Python的特点"><a href="#1-2-Python的特点" class="headerlink" title="1.2 Python的特点"></a>1.2 Python的特点</h2><ul>
<li>易于学习：Python有相对较少的关键字，结构简单，和一个明确定义的语法，学习起来更加简单</li>
<li>易于阅读：Python代码定义的更清晰</li>
<li>易于维护：Python的成功在于它的源代码是相当容易维护的</li>
<li>一个广泛的标准库：Python的最大的优势之一是丰富的库，跨平台的，在UNIX，Windows和Macintosh兼容很好</li>
<li>互动模式：互动模式的支持，您可以从终端输入执行代码并获得结果的语言，互动的测试和调试代码片断</li>
<li>可移植：基于其开放源代码的特性，Python已经被移植（也就是使其工作）到许多平台</li>
<li>可扩展：如果你需要一段运行很快的关键代码，或者是想要编写一些不愿开放的算法，你可以使用C或C++完成那部分程序，然后从你的Python程序中调用</li>
<li>数据库：Python提供所有主要的商业数据库的接口</li>
<li>GUI编程：Python支持GUI可以创建和移植到许多系统调用</li>
<li>可嵌入: 你可以将Python嵌入到C/C++程序，让你的程序的用户获得”脚本化”的能力</li>
</ul>
<h2 id="1-3-Python应用"><a href="#1-3-Python应用" class="headerlink" title="1.3 Python应用"></a>1.3 Python应用</h2><ul>
<li>网站及游戏：Youtube、dropbox、知乎、果壳、EVE（游戏）</li>
<li>云计算：云计算最热的语言，典型应用openstack</li>
<li>WEB开发：优秀的web框架是python开发的</li>
<li>操作系统和维护：操作和维护人员的基本语言</li>
<li>金融：用于金融分析、定量交易，金融领域重要性逐年增加</li>
</ul>
<h2 id="1-4-Python解释器简介"><a href="#1-4-Python解释器简介" class="headerlink" title="1.4 Python解释器简介"></a>1.4 Python解释器简介</h2><p>&ensp;&ensp;&ensp;&ensp;解释器是一种让其他程序运行起来的程序。实际上，解释器是代码与计算机硬件之间的软件逻辑层。Shell就是常见的解释器。解释器在执行时，每次读入一条语句，并且根据这条语句执行特定的操作；然后再读入下一条语句。</p>
<h1 id="2-Python-3环境搭建"><a href="#2-Python-3环境搭建" class="headerlink" title="2 Python 3环境搭建"></a>2 Python 3环境搭建</h1><hr>
<p>Python 3可用的操作系统包括win、linux、mac OS X</p>
<h2 id="2-1python-3的下载"><a href="#2-1python-3的下载" class="headerlink" title="2.1python 3的下载"></a>2.1python 3的下载</h2><p>python官网：<a href="https://www.python.org/" target="_blank" rel="noopener">https://www.python.org/</a><br>python文档：<a href="https://www.python.org/doc/" target="_blank" rel="noopener">https://www.python.org/doc/</a><br>win版下载：<a href="https://www.python.org/downloads/windows/" target="_blank" rel="noopener">https://www.python.org/downloads/windows/</a></p>
<h2 id="2-2-python-3的安装"><a href="#2-2-python-3的安装" class="headerlink" title="2.2 python 3的安装"></a>2.2 python 3的安装</h2><p><img src="https://ftp.bmp.ovh/imgs/2020/12/9d8bf954db5b3043.png" alt=""><br><img src="https://ftp.bmp.ovh/imgs/2020/12/688e40128b75541b.png" alt=""><br>Win+R，调出命令行<br><img src="https://ftp.bmp.ovh/imgs/2020/12/9b0c94fa6d64cda4.png" alt=""><br><img src="https://ftp.bmp.ovh/imgs/2020/12/ca56beab2ef2f2d2.png" alt=""></p>
<h2 id="2-3-python-3的环境变量配置（windows）"><a href="#2-3-python-3的环境变量配置（windows）" class="headerlink" title="2.3 python 3的环境变量配置（windows）"></a>2.3 python 3的环境变量配置（windows）</h2><p>&ensp;&ensp;&ensp;&ensp;程序和可执行文件可以在许多目录，而这些路径很可能不在操作系统提供可执行文件的搜索路径中。path(路径)存储在环境变量中，这是由操作系统维护的一个命名的字符串。这些变量包含可用的命令行解释器和其他程序的信息。linux或Windows中路径变量为PATH（linux区分大小写，Windows不区分大小写）</p>
<ul>
<li>在环境变量中添加python目录<br>右键此电脑-属性-高级系统设置-环境变量-系统变量中的Path（双击）<br><img src="https://ftp.bmp.ovh/imgs/2020/12/301b5cdac6038a81.png" alt=""></li>
<li>python的环境变量<br><img src="https://ftp.bmp.ovh/imgs/2020/12/384ad9d706798939.png" alt=""></li>
</ul>
<h1 id="3-运行python-3"><a href="#3-运行python-3" class="headerlink" title="3 运行python 3"></a>3 运行python 3</h1><p>Python的运行模式分为两种：</p>
<ul>
<li>基于解释器的交互模式：能执行一行或一段代码后提供即时反馈，检查代码是否是预期运行的样子</li>
<li>运行脚本的脚本模式：将整段代码写入一个扩展名为.py的文本文件中打包执行</li>
</ul>
<h2 id="3-1-交互模式"><a href="#3-1-交互模式" class="headerlink" title="3.1 交互模式"></a>3.1 交互模式</h2><p><img src="https://ftp.bmp.ovh/imgs/2020/12/90fc67fed7d293d1.png" alt=""><br><img src="https://ftp.bmp.ovh/imgs/2020/12/de5965e9b31ad795.png" alt=""><br>或者搜索idle，进入python解释器<br><img src="https://ftp.bmp.ovh/imgs/2020/12/57f30cb6cdeb0fa6.png" alt=""></p>
<p>Linux下两种运行方法：</p>
<ul>
<li>第一种：python xx.py</li>
<li>第二种：需要在.py文件内加上shebang，就是vim进入.py文件后<br>#!/usr/bin/env python<br>Print(“hello world”)<br>退出编辑后需要将其变为可执行文件，否则系统报错permission denied</li>
</ul>
<h2 id="3-2-脚本模式"><a href="#3-2-脚本模式" class="headerlink" title="3.2 脚本模式"></a>3.2 脚本模式</h2><ul>
<li>（CMD）新建文本文件-写入print(“hello world”) input()-双击运行</li>
<li>（IDLE） 新建文本文件-写入print(“hello world”) -双击运行</li>
</ul>
<p>Tips：raw_input()是为了防止闪退</p>
<h2 id="3-3-程序执行"><a href="#3-3-程序执行" class="headerlink" title="3.3 程序执行"></a>3.3 程序执行</h2><p>&ensp;&ensp;&ensp;&ensp;字节码编译：python会把源码编译成所谓字节码的形式。编译是一个简单翻译的步骤，可以提高运行速度。如果python进程在机器上拥有写的权限，那么它会把程序的字节码保存为一个以.pyc为扩展名的文件。.pyc就是编译过的.py源代码。<br><img src="https://ftp.bmp.ovh/imgs/2020/12/3112dc62131d2940.png" alt=""><br>&ensp;&ensp;&ensp;&ensp;Python虚拟机（PVM）：字节码会通过PVM来执行，PVM是python的运行引擎，实际运行脚本的组件</p>
]]></content>
      <categories>
        <category>Python笔记</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Arachni安装及网站扫描</title>
    <url>/2020/05/03/Arachni%E5%AE%89%E8%A3%85%E5%8F%8A%E7%BD%91%E7%AB%99%E6%89%AB%E6%8F%8F/</url>
    <content><![CDATA[<h1 id="0X00-Arachni介绍"><a href="#0X00-Arachni介绍" class="headerlink" title="0X00 Arachni介绍"></a>0X00 Arachni介绍</h1><hr>
<p>Arachni是一个多功能、模块化、高性能的Ruby框架，旨在帮助渗透测试人员和管理员评估Web应用程序的安全性。同时Arachni开源免费，可安装在Windows、Linux以及Mac系统上，并且可导出评估报告。</p>
<a id="more"></a>
<h1 id="0X01下载Arachni"><a href="#0X01下载Arachni" class="headerlink" title="0X01下载Arachni"></a>0X01下载Arachni</h1><hr>
<p>下载合适的Arachni版本，下载网址：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">https://www.arachni-scanner.com/download/</span></pre></td></tr></table></figure>

<h1 id="0X02-解压Arachni压缩包"><a href="#0X02-解压Arachni压缩包" class="headerlink" title="0X02 解压Arachni压缩包"></a>0X02 解压Arachni压缩包</h1><hr>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">命令：root@kali:~/Download<span class="comment"># tar -xvf arachni-1.5.1-0.5.12-linux-x86_64.tar.gz</span></span></pre></td></tr></table></figure>
<p><a href="https://imgchr.com/i/JzfgiD" target="_blank" rel="noopener"><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zMS5heDF4LmNvbS8yMDIwLzA1LzAzL0p6ZmdpRC5wbmc?x-oss-process=image/format,png" alt="JzfgiD.png"></a></p>
<h1 id="0X03-启动Arachni"><a href="#0X03-启动Arachni" class="headerlink" title="0X03 启动Arachni"></a>0X03 启动Arachni</h1><hr>
<p>进入解压后的文件夹中的bin目录，输入下面的命令，启动Arachni</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">命令：./arachni_web</span></pre></td></tr></table></figure>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zMS5heDF4LmNvbS8yMDIwLzA1LzAzL0p6aEVsOS5wbmc?x-oss-process=image/format,png" alt="JzhEl9.png"></p>
<h1 id="0X04进入扫描界面"><a href="#0X04进入扫描界面" class="headerlink" title="0X04进入扫描界面"></a>0X04进入扫描界面</h1><hr>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">在浏览器中输入：localhost:9292</span></pre></td></tr></table></figure>

<p>账号和密码点开Wiki查看<br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zMS5heDF4LmNvbS8yMDIwLzA1LzAzL0p6aDhsZC5wbmc?x-oss-process=image/format,png" alt="Jzh8ld.png"><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zMS5heDF4LmNvbS8yMDIwLzA1LzAzL0p6NENuSS5wbmc?x-oss-process=image/format,png" alt="Jz4CnI.png"><br>输入账号，密码即可</p>
<h1 id="0X05选择测试网站"><a href="#0X05选择测试网站" class="headerlink" title="0X05选择测试网站"></a>0X05选择测试网站</h1><hr>
<p>为了更好的体现出Arachni的作用，有一个专门测试扫描器能力的网站</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://www.vulnweb.com/     //测试扫描器能力</span></pre></td></tr></table></figure>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zMS5heDF4LmNvbS8yMDIwLzA1LzAzL0p6NEt1bi5wbmc?x-oss-process=image/format,png" alt="Jz4Kun.png"><br>在这里我们选择第二个，作为测试的网站</p>
<h1 id="0X06新建扫描并选择配置"><a href="#0X06新建扫描并选择配置" class="headerlink" title="0X06新建扫描并选择配置"></a>0X06新建扫描并选择配置</h1><hr>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zMS5heDF4LmNvbS8yMDIwLzA1LzAzL0p6NGNnSC5wbmc?x-oss-process=image/format,png" alt="Jz4cgH.png"><br>部分比较重要的参数填写<br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zMS5heDF4LmNvbS8yMDIwLzA1LzAzL0p6NURMbi5wbmc?x-oss-process=image/format,png" alt="Jz5DLn.png"><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zMS5heDF4LmNvbS8yMDIwLzA1LzAzL0p6NW9lMS5wbmc?x-oss-process=image/format,png" alt="Jz5oe1.png">)<img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zMS5heDF4LmNvbS8yMDIwLzA1LzAzL0p6NVRkeC5wbmc?x-oss-process=image/format,png" alt="Jz5Tdx.png"><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zMS5heDF4LmNvbS8yMDIwLzA1LzAzL0p6NTdvNi5wbmc?x-oss-process=image/format,png" alt="Jz57o6.png"><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zMS5heDF4LmNvbS8yMDIwLzA1LzAzL0p6NVhTZS5wbmc?x-oss-process=image/format,png" alt="Jz5XSe.png"><br>由于扫描的时间太长，在这里扫描结果就不展示了。。。</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>Web安全</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux学习笔记 &amp; 3、文件权限与目录配置</title>
    <url>/2020/03/10/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-3%E3%80%81%E6%96%87%E4%BB%B6%E6%9D%83%E9%99%90%E4%B8%8E%E7%9B%AE%E5%BD%95%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="0X01文件权限"><a href="#0X01文件权限" class="headerlink" title="0X01文件权限"></a>0X01文件权限</h1><hr>
<p>Linux不同于Windows,在Linux中一般将文件可存取的身份分为三个类别，分别是 owner(主用户)，group(组用户)，others(其他用户)，这三种身份分别有 read(可读)，write(可写)，execute(可执行)权限。</p>
<a id="more"></a>

<h2 id="一、用户含义"><a href="#一、用户含义" class="headerlink" title="一、用户含义"></a>一、用户含义</h2><p>1.主用户：由于Linux是个多用户多任务的系统，因此可能常常会有多人同时使用这部主机来进行工作。有些文件只想自己查看，因此设置权限，将自己设置为该文件所以者。<br>2.组用户：文件可以让自己同组人员查看，其他组的成员无权访问。<br>3.其他用户：除了文件所有者或文件所属群组成员的用户，便都是其他人。<br>4.root用户：Linux身份最大的人，可以访问一切文件。</p>
<h2 id="二、root用户与普通用户切换"><a href="#二、root用户与普通用户切换" class="headerlink" title="二、root用户与普通用户切换"></a>二、root用户与普通用户切换</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[cai@localhost ~]$ su -         //普通用户切换到root</span></pre></td></tr><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># exit       //root切换到普通用户</span></span></pre></td></tr></table></figure>

<h2 id="三、文件权限解读"><a href="#三、文件权限解读" class="headerlink" title="三、文件权限解读"></a>三、文件权限解读</h2><p>1.首先查看Linux中的所有文件，使用如下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[cai@localhost ~]$ ls -al</span></pre></td></tr></table></figure>

<p>ls是list的意思，显示文件的文件名与相关属性<br>参数-al表示详细列出所有文件的权限与属性</p>
<p>2.分析</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-rw-------.  1 cai  cai   319 Mar  5 21:37 .bash_history</span></pre></td></tr></table></figure>

<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zMi5heDF4LmNvbS8yMDIwLzAzLzEwLzhQdHB3ai5wbmc?x-oss-process=image/format,png" alt="8Ptpwj.png"><br>3.文件类型权限<br>1）如 -rwxrw-r–：由10个字符串组成，可以分成四段解读，第1位表示第一段，2到4位表示第二段，5到7位表示第三段，8到10位表示第四段。<br>2）r：表示可读，w：表示可写，x：表示可执行。<br>3）权限解析</p>
<ul>
<li>第一段(第1位)表示是目录还是文件，-表示是文件，d表示是目录</li>
<li>第二段(第2-4位，共3个字符串)表示文件所属用户对它的权限</li>
<li>第三段(第5-7位，共3个字符串)表示文件所属用户组用户对它的权限</li>
<li>第四段(第8-10位，共3个字符串)表示其他用户对它的权限</li>
</ul>
<p>4）-  rwx  rw-  r–</p>
<ul>
<li>-：表示是普通文件</li>
<li>rwx：表示文件主(owner用户)对它有可读可写可执行权限</li>
<li>rw-：表示组用户(group)对它有可读可写的权限</li>
<li>r–：表示其他用户(others)对它只要可读权限</li>
</ul>
<h2 id="四、改变文件属性与权限"><a href="#四、改变文件属性与权限" class="headerlink" title="四、改变文件属性与权限"></a>四、改变文件属性与权限</h2><p>改变文件属性与权限的常用命令<br>chgrp ：改变文件所属群组,change group缩写<br>chown ：改变文件拥有者，change own缩写<br>chmod ：改变文件的权限</p>
<p>1.chgrp<br>改变文件所属群组</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">语法：[root@localhost ~]<span class="comment"># chgrp [新群组名]  [文件名]</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">实例：[root@localhost ~]<span class="comment"># ls -al</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">-rw-r--r--.  1 root root    0 Mar  7 14:29 2.txt  //root用户组</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># chgrp cai 2.txt </span></span></pre></td></tr><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># ls -al</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">-rw-r--r--.  1 root cai     0 Mar  7 14:29 2.txt   //成功切换到cai用户组</span></pre></td></tr></table></figure>

<p>2.chown<br>1）改变文件拥有者</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">语法：[root@localhost ~]<span class="comment"># chwon [新拥有者]  [文件名]</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">实例：[root@localhost ~]<span class="comment"># ls -al</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">-rw-r--r--.  1 root cai    0 Mar  7 14:29 2.txt</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># chown cai 2.txt </span></span></pre></td></tr><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># ls -al</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">-rw-r--r--.  1 cai  cai    0 Mar  7 14:29 2.txt</span></pre></td></tr></table></figure>

<p>2）如果想将文件拥有者和文件所属群组都改变为root,可以直接使用下面的命令。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">语法：[root@localhost ~]<span class="comment"># chwon root:root 文件名</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">实例：[roott@localhost ~]<span class="comment"># chown root:root 2.txt</span></span></pre></td></tr></table></figure>

<p>3.chmod<br>改变文件的权限,有两种方法，方法一使用符号变更权限，方法二使用数字变更权限。</p>
<p><strong>方法一</strong>：符号法变更文件权限<br>1)在Linux中，简写o=owner，g=group(组用户)，o=others(其他用户)。前文中提到过，r表示可读，w表示可写，x表示可执行。</p>
<p>2）两种做法<br>做法一：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">语法：[root@localhost ~]<span class="comment">#chmod u=权限,g=权限,o=权限 文件名    //如果某两种用户设置权限相等可以用ug=权限。</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">实例：[root@localhost ~]<span class="comment"># ls -al</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">-rwxrwxrwx.  1 cai  root    0 Mar  7 14:29 2.txt</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># chmod u=rwx,g=rw,o=r 2.txt </span></span></pre></td></tr><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># ls -al</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">-rwxrw-r--.  1 cai  root    0 Mar  7 14:29 2.txt</span></pre></td></tr></table></figure>

<p><strong>做法二：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">语法：[root@localhost ~]<span class="comment">#chmod u/g/0加或者减权限 文件名  </span></span></pre></td></tr><tr><td class="code"><pre><span class="line">实例：[root@localhost ~]<span class="comment"># ls -al</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">-rwxrw-r--.  1 cai  root    0 Mar  7 14:29 2.txt</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># chmod o+w 2.txt </span></span></pre></td></tr><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># ls -al</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">-rwxrw-rw-.  1 cai  root    0 Mar  7 14:29 2.txt</span></pre></td></tr></table></figure>

<p>方法二：数字法改变文件的权限<br>1）在Linux中，可读权限(r)=4<br>                          可写权限(w)=2<br>                           可执行权限(x)=1</p>
<p>2）每种身份（owner/group/others）各自的三个权限（r/w/x）权限数是需要累加的。<br>例如：-rw-r–r–.  1 root cai    0 Mar  7 14:29 2.txt<br>第一段“-”：表示2.txt是文件<br>第二段“rw-”：权限数为4+2+0=6<br>第三段“r–”：权限数字为4+0+0=4<br>第四段“r–”：权限数字为4+0+0=4</p>
<p>3）语法：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># chmod xyz 文件名   //xyz数字类型的权限属性，为 rwx 属性数值的相加。</span></span></pre></td></tr></table></figure>

<p>实例：-rw-r–r–.  1 cai  root    0 Mar  7 14:29 2.txt<br>如何要使该文件的三个用户都拥有可读可写可执行的权限，那么x=4+2+1，y=4+2+1,z=4+2+1</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># chmod 777 2.txt</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># ls -al</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">-rwxrwxrwx.  1 cai  root    0 Mar  7 14:29 2.txt</span></pre></td></tr></table></figure>

<h1 id="0X02-目录配置"><a href="#0X02-目录配置" class="headerlink" title="0X02 目录配置"></a>0X02 目录配置</h1><hr>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zMi5heDF4LmNvbS8yMDIwLzAzLzEwLzhQWVJXNi5wbmc?x-oss-process=image/format,png" alt="8PYRW6.png"></p>
<h2 id="一、根目录"><a href="#一、根目录" class="headerlink" title="一、根目录"></a>一、根目录</h2><p>根目录是整个系统最重要的一个目录，因为不但所有的目录都是由根目录衍生出来的，同时<br>根目录也与开机/还原/系统修复等动作有关。 由于系统开机时需要特定的开机软件、核心文<br>件、开机所需程序、函数库等等文件数据，若系统出现错误时，根目录也必须要包含有能够<br>修复文件系统的程序。</p>
<h2 id="二、根目录下次目录"><a href="#二、根目录下次目录" class="headerlink" title="二、根目录下次目录"></a>二、根目录下次目录</h2><p>1、/bin：/bin放置的是在单人维护模式下还能够被操作的指令。 在/bin下面的指令可以被root与一般帐号所使用，主要有：cat, chmod, chown, date, mv, mkdir, cp, bash等等常<br>用的指令。</p>
<p>2、/boot：这个目录主要在放置开机会使用到的文件，包括Linux核心文件以及开机菜单与开机所需配置文件等等。</p>
<p>3、/dev：在Linux系统上，任何设备与周边设备都是以文件的型态存在于这个目录当中的。 你只要通过存取这个目录下面的某个文件，就等于存取某个设备。</p>
<p>4、/etc：系统主要的配置文件几乎都放置在这个目录内，例如人员的帐号密码档、各种服务的启始档等等。一般来说，这个目录下的各文件属性是可以让一般使用者查阅的， 但是只有root有权力修改</p>
<p>5、/lib：/lib放置的是在开机时会用到的函数库， 以及在/bin或/sbin下面的指令会调用的函数库而已。</p>
<p>6、/media：media是“媒体”的英文，，/media下面放置的就是可移除的设备</p>
<p>7、/mnt：用来暂时挂载某些额外的设备</p>
<p>8、/opt：这个是给第三方协力软件放置的目录。</p>
<p>9、/run：放置系统开机后所产生的各项信息</p>
<p>10、/srv：srv可以视为“service”的缩写，是一些网络服务启动之后，这些服务所需要取用的数据目录。 </p>
<p>11、/tmp：让一般使用者或者是正在执行的程序暂时放置文件的地方。 这个目录是任何人都能够存取的。</p>
<p>12、/home：这是系统默认的使用者主文件夹（home directory）。</p>
<p>13、/lib<qual>： 用来存放与 /lib 不同的格式的二进制函数库</p>
<p>14、/root：系统管理员（root）的主文件夹。</p>
<p>15、/lost+found：当文件系统发生错误时， 将一些遗失的片段放置到这个目录下。</p>
<p>16、/proc：这个目录是一个“虚拟文件系统（virtual filesystem）</p>
<p>17、/sys：主要也是记录核心与系统硬件信息较相关的信息。 </p>
<h2 id="三、-usr"><a href="#三、-usr" class="headerlink" title="三、/usr"></a>三、/usr</h2><p>usr是Unix Software Resource的缩写， 也就是“Unix操作系统软件资源”所放置的目录。/usr下面有如下一些重要的次目录</p>
<p>1、/usr/bin/：所有一般用户能够使用的指令都放在这里</p>
<p>2、/usr/lib/： 基本上，与 /lib 功能相同，所以 /lib 就是链接到此目录中的！</p>
<p>3、/usr/sbin/：非系统正常运行所需要的系统指令</p>
<p>4、/usr/share/：主要放置只读架构的数据文件，包括共享文件。</p>
<p>5、/usr/games/： 与游戏比较相关的数据放置处</p>
<p>6、/usr/include/：c/c++等程序语言的文件开始（header）与包含档（include）放置处。</p>
<p>7、/usr/libexec/：某些不被一般使用者惯用的可执行文件或脚本（script）等等，都会放<br>置在此目录中。</p>
<p>8、/usr/lib<qual>/：与 /lib<qual>/功能相同，链接到此目录中</p>
<p>9、/usr/src/：源代码建议放置到这里</p>
<p>10、/usr/local/：系统管理员在本机自行安装自己下载的软件（非distribution默认提供<br>者）安装到此目录，便于管理。</p>
<h2 id="四、-var"><a href="#四、-var" class="headerlink" title="四、/var"></a>四、/var</h2><p>如果说/usr是安装时会占用较大硬盘容量的目录，那么/var就是在系统运行后才会渐渐占用硬盘<br>容量的目录，/var目录主要针对常态性变动的文件。/var下有如下的一些重要的次目录。</p>
<p>1、/var/cache/： 应用程序本身运行过程中产生的一些暂存盘</p>
<p>2、/var/lib/：程序本身执行的过程中，需要使用到的数据文件放置的目录。</p>
<p>3、/var/lock/：某些设备或文件资源一次只能被一个应用程序所使用，如果同时有两个程序使用该设备时， 就可能产生一些错误的状况，因此就得要将该设备上锁（lock），以确保该设备只会给单一软件所使用。</p>
<p>4、/var/log/：登录文件放置的目录，里面是比较重要的文件</p>
<p>5、/var/mail/ ：放置个人电子邮件信箱的目录</p>
<p>6、/var/run/：某些程序或者是服务启动后，他们的PID放置的目录下</p>
<p>7、/var/spool/：这个目录通常放置一些伫列数据，所谓的“伫列”就是排队等待其他程序使<br>用的数据， 这些数据被使用后通常都会被删除。</p>
]]></content>
      <categories>
        <category>笔记</category>
        <category>操作系统</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>操作系统</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux学习笔记 &amp; 2、入门</title>
    <url>/2020/03/05/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-2%E3%80%81%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<p>在后面所有的命令中，都以在Centos7中操作为例。下面就以一些简单的基础命令为例，走进Linux世界吧！</p>
<a id="more"></a>
<hr>
<h1 id="一、快捷键"><a href="#一、快捷键" class="headerlink" title="一、快捷键"></a>一、快捷键</h1><p>首先介绍一些在Linux中常用到的快捷键吧。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Ctrl + L                    清屏</span></pre></td></tr><tr><td class="code"><pre><span class="line">Ctrl + <span class="built_in">shift</span> + 加号         增大Terminal界面</span></pre></td></tr><tr><td class="code"><pre><span class="line">Ctrl + 减号                 缩小Terminal界面</span></pre></td></tr><tr><td class="code"><pre><span class="line">Ctrl + <span class="built_in">shift</span> +C             复制</span></pre></td></tr><tr><td class="code"><pre><span class="line">Ctrl + <span class="built_in">shift</span> +V             粘贴</span></pre></td></tr><tr><td class="code"><pre><span class="line">Ctrl + Alt + d              显示桌面</span></pre></td></tr><tr><td class="code"><pre><span class="line">Alt + F4                    关闭当前窗口</span></pre></td></tr><tr><td class="code"><pre><span class="line">Alt + F9                    最小化当前窗口</span></pre></td></tr><tr><td class="code"><pre><span class="line">Alt + F10                   最大化当前窗口</span></pre></td></tr><tr><td class="code"><pre><span class="line">Alt + Tab                   切换窗口</span></pre></td></tr><tr><td class="code"><pre><span class="line">Tab                         命令行自动补全   //后面详细介绍用法</span></pre></td></tr></table></figure>
<hr>
<h1 id="二、简单命令"><a href="#二、简单命令" class="headerlink" title="二、简单命令"></a>二、简单命令</h1><h3 id="1-重启命令"><a href="#1-重启命令" class="headerlink" title="1.重启命令"></a>1.重启命令</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">reboot   //重启</span></pre></td></tr><tr><td class="code"><pre><span class="line">shutdown -r now     //立刻重启(root用户使用)</span></pre></td></tr><tr><td class="code"><pre><span class="line">shutdown -r 5      //过5分钟自动重启(root用户使用)</span></pre></td></tr><tr><td class="code"><pre><span class="line">shutdown -r 5:20   //在时间为5:20时候重启(root用户使用)</span></pre></td></tr></table></figure>

<p><strong>ps:</strong> 如果是通过shutdown命令设置重启的话，可以用shutdown -c命令取消重启<br>补充提下这里说的root用户，普通用户提升为root用户的方法：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[cai@localhost ~]$ su root   //当输入代码前是$表示是普通用户</span></pre></td></tr><tr><td class="code"><pre><span class="line">Password:  //输入密码</span></pre></td></tr><tr><td class="code"><pre><span class="line">[root@localhost cai]<span class="comment">#      //当输入指令前是#表示是root用户</span></span></pre></td></tr></table></figure>

<h3 id="2-关机命令："><a href="#2-关机命令：" class="headerlink" title="2.关机命令："></a>2.关机命令：</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">halt   //立刻关机</span></pre></td></tr><tr><td class="code"><pre><span class="line">poweroff   //立刻关机</span></pre></td></tr><tr><td class="code"><pre><span class="line">shutdown -h now   //立刻关机(root用户使用)</span></pre></td></tr><tr><td class="code"><pre><span class="line">shutdown -h 5   //5分钟后自动关机</span></pre></td></tr></table></figure>

<h3 id="3-更新命令"><a href="#3-更新命令" class="headerlink" title="3.更新命令"></a>3.更新命令</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost cai]<span class="comment"># yum -y update</span></span></pre></td></tr></table></figure>

<h3 id="4-查看日期和时间"><a href="#4-查看日期和时间" class="headerlink" title="4.查看日期和时间"></a>4.查看日期和时间</h3><p>查看日期和时间用date命令<br>1）在命令行界面输入date可立马显示出当前的日期与时间</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[cai@localhost ~]$ date</span></pre></td></tr><tr><td class="code"><pre><span class="line">Thu Mar  5 15:15:55 CST 2020 //星期 月 日 时间 CST时区 年份</span></pre></td></tr></table></figure>

<p>2）如果你发现你Linux中的时间与真实时间不匹配可以用以下的命令进行修改（以上海时间为例）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">timedatectl <span class="built_in">set</span>-timezone Asia/Shanghai</span></pre></td></tr></table></figure>

<p>3）如果只想看年月日，或者只想看时间总么办嘞？这时候就要做格式化输出了！<br>首先当你不知道的情况下可以在命令行界面输入下面的命令，查看date命令的相关用法。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[cai@localhost ~]$ date --<span class="built_in">help</span>     //<span class="built_in">help</span>用法后面会解释，这里只是暂时的引用下</span></pre></td></tr></table></figure>

<p>以简单的年月日，时间为例</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">%Y   year</span></pre></td></tr><tr><td class="code"><pre><span class="line">%m   month (01..12)</span></pre></td></tr><tr><td class="code"><pre><span class="line">%d   day of month (e.g., 01)</span></pre></td></tr><tr><td class="code"><pre><span class="line">%H   hour (00..23)</span></pre></td></tr><tr><td class="code"><pre><span class="line">%M   minute (00..59)</span></pre></td></tr></table></figure>

<p>因此，想要输出年月日，时间可做以下格式化输出</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[cai@localhost ~]$ date +%Y/%m/%d</span></pre></td></tr><tr><td class="code"><pre><span class="line">2020/03/05</span></pre></td></tr><tr><td class="code"><pre><span class="line">[cai@localhost ~]$ date +%H:%M</span></pre></td></tr><tr><td class="code"><pre><span class="line">15:28</span></pre></td></tr></table></figure>

<h3 id="5-查看日历"><a href="#5-查看日历" class="headerlink" title="5.查看日历"></a>5.查看日历</h3><p>查看日历用cal命令<br>1）显示当前Linux中的日历</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[cai@localhost ~]$ cal</span></pre></td></tr><tr><td class="code"><pre><span class="line">     March 2020     </span></pre></td></tr><tr><td class="code"><pre><span class="line">Su Mo Tu We Th Fr Sa</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 1  2  3  4  5  6  7</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 8  9 10 11 12 13 14</span></pre></td></tr><tr><td class="code"><pre><span class="line">15 16 17 18 19 20 21</span></pre></td></tr><tr><td class="code"><pre><span class="line">22 23 24 25 26 27 28</span></pre></td></tr><tr><td class="code"><pre><span class="line">29 30 31</span></pre></td></tr></table></figure>

<p>2）显示指定某一年的日历</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">语法：[cai@localhost ~]$ cal 年份</span></pre></td></tr><tr><td class="code"><pre><span class="line">实例：[cai@localhost ~]$ cal 2019</span></pre></td></tr><tr><td class="code"><pre><span class="line">                               2019                               </span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">       January               February                 March       </span></pre></td></tr><tr><td class="code"><pre><span class="line">Su Mo Tu We Th Fr Sa   Su Mo Tu We Th Fr Sa   Su Mo Tu We Th Fr Sa</span></pre></td></tr><tr><td class="code"><pre><span class="line">       1  2  3  4  5                   1  2                   1  2</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 6  7  8  9 10 11 12    3  4  5  6  7  8  9    3  4  5  6  7  8  9</span></pre></td></tr><tr><td class="code"><pre><span class="line">13 14 15 16 17 18 19   10 11 12 13 14 15 16   10 11 12 13 14 15 16</span></pre></td></tr><tr><td class="code"><pre><span class="line">20 21 22 23 24 25 26   17 18 19 20 21 22 23   17 18 19 20 21 22 23</span></pre></td></tr><tr><td class="code"><pre><span class="line">27 28 29 30 31         24 25 26 27 28         24 25 26 27 28 29 30</span></pre></td></tr><tr><td class="code"><pre><span class="line">                                              31</span></pre></td></tr><tr><td class="code"><pre><span class="line">......</span></pre></td></tr></table></figure>

<p>3）显示某一年的某一月</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">语法：[cai@localhost ~]$ cal 月 年   //注意cal后面的月要放在前，年要放在后，否则会出现错误</span></pre></td></tr><tr><td class="code"><pre><span class="line">实例：[cai@localhost ~]$ cal 5 2019</span></pre></td></tr><tr><td class="code"><pre><span class="line">      May 2019      </span></pre></td></tr><tr><td class="code"><pre><span class="line">Su Mo Tu We Th Fr Sa</span></pre></td></tr><tr><td class="code"><pre><span class="line">          1  2  3  4</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 5  6  7  8  9 10 11</span></pre></td></tr><tr><td class="code"><pre><span class="line">12 13 14 15 16 17 18</span></pre></td></tr><tr><td class="code"><pre><span class="line">19 20 21 22 23 24 25</span></pre></td></tr><tr><td class="code"><pre><span class="line">26 27 28 29 30 31</span></pre></td></tr></table></figure>
<hr>
<h1 id="三、帮助命令"><a href="#三、帮助命令" class="headerlink" title="三、帮助命令"></a>三、帮助命令</h1><h3 id="1-help命令"><a href="#1-help命令" class="headerlink" title="1.help命令"></a>1.help命令</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">语法：[命令] --<span class="built_in">help</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">实例：[cai@localhost ~]$ date --<span class="built_in">help</span></span></pre></td></tr></table></figure>

<h3 id="2-man命令"><a href="#2-man命令" class="headerlink" title="2.man命令"></a>2.man命令</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">语法：man [命令]</span></pre></td></tr><tr><td class="code"><pre><span class="line">实例：[cai@localhost ~]$ man cal</span></pre></td></tr></table></figure>

<p>取出一段输出结果，介绍下相关内容</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">CAL(1)                           User Commands                          CAL(1)</span></pre></td></tr><tr><td class="code"><pre><span class="line">NAME</span></pre></td></tr><tr><td class="code"><pre><span class="line">       cal - display a calendar</span></pre></td></tr><tr><td class="code"><pre><span class="line">SYNOPSIS</span></pre></td></tr><tr><td class="code"><pre><span class="line">       cal [options] [[[day] month] year]</span></pre></td></tr><tr><td class="code"><pre><span class="line">DESCRIPTION</span></pre></td></tr><tr><td class="code"><pre><span class="line">       cal  displays  a  simple  calendar.  If no arguments are specified, the</span></pre></td></tr><tr><td class="code"><pre><span class="line">       current month is displayed.</span></pre></td></tr><tr><td class="code"><pre><span class="line">OPTIONS</span></pre></td></tr><tr><td class="code"><pre><span class="line">       -1, --one</span></pre></td></tr><tr><td class="code"><pre><span class="line">              Display single month output.  (This is the default.)</span></pre></td></tr><tr><td class="code"><pre><span class="line">       -3, --three</span></pre></td></tr><tr><td class="code"><pre><span class="line">              Display prev/current/next month output.</span></pre></td></tr><tr><td class="code"><pre><span class="line">       -s, --sunday</span></pre></td></tr><tr><td class="code"><pre><span class="line">              Display Sunday as the first day of the week.</span></pre></td></tr><tr><td class="code"><pre><span class="line">       -m, --monday</span></pre></td></tr><tr><td class="code"><pre><span class="line">......</span></pre></td></tr></table></figure>

<p>1）在第一行中有个CAL(1),(1)代表使用者在shell环境中可以操作的指令或可可执行文件，还有其他数字，代表的含义也不同，具体如下：<br>（1）使用者在shell环境中可以操作的指令或可可执行文件<br>（2）系统核心可调用的函数与工具等<br>（3）一些常用的函数（function）与函数库（library），大部分为C的函数库（libc）<br>（4）设备文件的说明，通常在/dev下的文件<br>（5）配置文件或者是某些文件的格式<br>（6）游戏（games）<br>（7）惯例与协定等，例如Linux文件系统、网络协定、ASCII code等等的说明<br>（8）系统管理员可用的管理指令<br>（9）跟kernel有关的文件</p>
<p>2）后面的输出中出现一些大写单词，如第三行的NAME，这些属性下面的内容也表示不同的含义。<br>NAME：简短的指令、数据名称说明<br>SYNOPSIS：简短的指令下达语法（syntax）简介<br>DESCRIPTION：较为完整的说明<br>OPTIONS：针对 SYNOPSIS 部分中，有列举的所有可用的选项说明<br>COMMANDS：当这个程序（软件）在执行的时候，可以在此程序（软件）中下达的<br>指令<br>FILES：这个程序或数据所使用或参考或链接到的某些文件<br>SEE ALSO：跟这个指令或数据有相关的其他说明<br>EXAMPLE 一些可以参考的范例</p>
<hr>
<h1 id="四、tab键"><a href="#四、tab键" class="headerlink" title="四、tab键"></a>四、tab键</h1><p>tab键具有“命令补全”与“文件补齐”的功能，从而可以大大的提高我们敲写代码的速度与正确性。<br>我简单的总结为：<strong>一补全，二查找</strong>。也就是说输入命令后按一下tab键补全，按两下查找以该命令开头的文件。</p>
<h3 id="1-补全"><a href="#1-补全" class="headerlink" title="1.补全"></a>1.补全</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[cai@localhost ~]$ ifco[tab]</span></pre></td></tr></table></figure>

<p>此时会自动的补全为：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[cai@localhost ~]$ ifcofig</span></pre></td></tr></table></figure>

<h3 id="2-查找"><a href="#2-查找" class="headerlink" title="2.查找"></a>2.查找</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[cai@localhost ~]$ ba [tab][tab]</span></pre></td></tr><tr><td class="code"><pre><span class="line">badblocks   base64      bash        bashbug-64  </span></pre></td></tr><tr><td class="code"><pre><span class="line">baobab      basename    bashbug     batch</span></pre></td></tr></table></figure>


<p>把所有ba开头的文件全部显示了出来。</p>
<hr>
]]></content>
      <categories>
        <category>笔记</category>
        <category>操作系统</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>操作系统</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux学习笔记 &amp; 1、简述</title>
    <url>/2020/03/04/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1%E3%80%81%E7%AE%80%E8%BF%B0/</url>
    <content><![CDATA[<h1 id="一、操作系统"><a href="#一、操作系统" class="headerlink" title="一、操作系统"></a>一、操作系统</h1><hr>
<h3 id="1-什么是操作系统？"><a href="#1-什么是操作系统？" class="headerlink" title="1.什么是操作系统？"></a>1.什么是操作系统？</h3><p> 操作系统（英语：Operating System，缩写：OS）是管理计算机硬件与软件资源的计算机程序，同时也是计算机系统的内核与基石。操作系统需要处理如管理与配置内存、决定系统资源供需的优先次序、控制输入设备 与输出设备 、操作网络与管理文件系统等基本事务。操作系统也提供一个让用户与系统交互的操作界面。<br> <a id="more"></a></p>
<h3 id="2-操作系统的分类"><a href="#2-操作系统的分类" class="headerlink" title="2.操作系统的分类"></a>2.操作系统的分类</h3><p>常见的操作系统有DOS、OS/2、UNIX、XENIX、LINUX、Windows、Netware等。</p>
<h3 id="3-操作系统的功能"><a href="#3-操作系统的功能" class="headerlink" title="3.操作系统的功能"></a>3.操作系统的功能</h3><p>1）管理计算机系统的硬件、软件及数据资源，控制程序运行。<br>2）改善人机界面，提供各种形式的用户界面，方便用户更好的操控计算机。<br>3）为其它应用软件提供支持，让计算机系统所有资源最大限度的发挥作用。<br>4）使用户有一个好的工作环境，为其它软件的开发提供必要的服务和相应的接口等。</p>
<hr>
<h1 id="二、Linux操作系统"><a href="#二、Linux操作系统" class="headerlink" title="二、Linux操作系统"></a>二、Linux操作系统</h1><h3 id="1-什么是Linux操作系统？"><a href="#1-什么是Linux操作系统？" class="headerlink" title="1.什么是Linux操作系统？"></a>1.什么是Linux操作系统？</h3><p>Linux是一套免费使用和自由传播的类Unix操作系统，是一个基于POSIX和Unix的多用户、多任务、支持多线程和多CPU的操作系统。它能运行主要的Unix工具软件、应用程序和网络协议。它支持32位和64位硬件。Linux继承了Unix以网络为核心的设计思想，是一个性能稳定的多用户网络操作系统。</p>
<h3 id="2-Linux操作系统的发展历史"><a href="#2-Linux操作系统的发展历史" class="headerlink" title="2.Linux操作系统的发展历史"></a>2.Linux操作系统的发展历史</h3><p>Linux操作系统的诞生、发展和成长过程始终依赖着五个重要支柱：Unix操作系统、MINIX操作系统、GNU计划、POSIX标准和Internet网络。<br>1）在 20世纪80年代， PC的市场不断扩大，当时可供计算机选用的操作系统主要有Unix、DOS和MacOS这几种。但是Unix价格昂贵，不能运行于PC。DOS显得简陋，且源代码不开源。MacOS系统专门用于苹果计算机的。<br>2） 因为迫切的需要，经过不断努力，在荷兰当教授的美国人AndrewS.Tanenbaum编写了一个开源的操作系统，名为MINIX。但MINIX只是用于教学目的的简单操作系统，不是一个实用的操作系统。<br>3）芬兰赫尔辛基大学大学二年级的学生Linus Torvalds，在吸收了MINIX精华的基础上，Linus于1991年写出了属于自己的Linux操作系统，版本为Linux0.01，是Linux时代开始的标志。他利用Unix的核心，改写成适用于一般计算机的x86系统，1994年推出完整的核心Version1.0，至此，Linux不断发展。</p>
<h3 id="3、Linux操作系统的特点"><a href="#3、Linux操作系统的特点" class="headerlink" title="3、Linux操作系统的特点"></a>3、Linux操作系统的特点</h3><p>1）开源<br>2）完全免费使用<br>3）多用户、多任务<br>4）良好的用户界面<br>5）支持多种平台<br>6）良好的可移植性<br>7）提供了丰富的网络功能，支持所有的因特网协议链路层拓扑程序等，且可以利用Unix的网络特性开发出新的协议栈。</p>
<h3 id="4-建议"><a href="#4-建议" class="headerlink" title="4.建议"></a>4.建议</h3><p>初学者该如何学习Linux基础嘞（个人建议，具体结合实际）<br>1）从0开始学习Linux,从Linux的安装开始学起，然后在逐步学习命令操作，与其他功能操作。<br>2）多去油管或者B站，找一些比较有名的作者，细心观看TA的教学视频。<br>3）找一本质量比较好的Linux书籍，不用多一本就好，在这里我推荐《鸟哥的Linxu私房菜》<br>4）这一点是我觉得最关键也是最重要的一点，理论结合实践，一定要多练，结合例子不停的去敲命令，熟能生巧，一些命令敲多了，自然也就能记住了！</p>
]]></content>
      <categories>
        <category>笔记</category>
        <category>操作系统</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>操作系统</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML基础（三）</title>
    <url>/2020/03/04/HTML%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%89%EF%BC%89/</url>
    <content><![CDATA[<h1 id="0X11HTML表格"><a href="#0X11HTML表格" class="headerlink" title="0X11HTML表格"></a><strong><em>0X11HTML表格</em></strong></h1><hr>
<h3 id="一、属性border"><a href="#一、属性border" class="headerlink" title="一、属性border"></a>一、属性border</h3><p>默认情况下，浏览器显示图片是没有边框的，即边框宽度为0。利用border属性可以为图片加上边框。border属性的参数值是数字，表示边框宽度所占的像素点数。</p>
<a id="more"></a>

<h3 id="二、HTML表格"><a href="#二、HTML表格" class="headerlink" title="二、HTML表格"></a>二、HTML表格</h3><p>表格由<code>&lt;table&gt;</code>标签来定义。每个表格均有若干行（由<code>&lt;tr&gt;</code> 标签定义），每行被分割为若干单元格（由<code>&lt;td&gt;</code>标签定义）。</p>
<h3 id="三、表格标签"><a href="#三、表格标签" class="headerlink" title="三、表格标签"></a>三、表格标签</h3><p>1.表格标签用来创建一个表格。<br>2.语法：<code>&lt;table&gt;...&lt;table&gt;</code><br>3.属性：<br>width和height属性设置表格的宽度和高度<br>border和bordercolor属性设置表格边框的像素值和颜色值<br>cellspacing和cellpadding属性设置单元格之间的空间大小和单元格边框与内部文字之间的空间大小。</p>
<h3 id="四、行标签"><a href="#四、行标签" class="headerlink" title="四、行标签"></a>四、行标签</h3><p>1.行标签用来创建表格中的每一行。行标签只能放在表格标签对之间，并且行标签对之间不可以加入文本。<br>2.语法：<code>&lt;tr&gt;...&lt;/tr&gt;</code><br>3.属性：属性align、属性valign、属性bgcolor</p>
<h3 id="五、表头标签-lt-th-gt-lt-th-gt"><a href="#五、表头标签-lt-th-gt-lt-th-gt" class="headerlink" title="五、表头标签&lt;th&gt;...&lt;/th&gt;"></a>五、表头标签<code>&lt;th&gt;...&lt;/th&gt;</code></h3><p>1.表头标签用来设置表格头，通常是黑体字且在单元格内居中，该标签用来告诉浏览器将一个单元格的内容格式化为表头。<br>2.语法：<code>&lt;th&gt;...&lt;/th&gt;</code></p>
<h3 id="六、单元格标签"><a href="#六、单元格标签" class="headerlink" title="六、单元格标签"></a>六、单元格标签</h3><p>1.单元格标签是用来创建表格中每一行里的每一个单元格，单元格标签只能放在行标签对之间。需要输入的文本放在单元格标签对之间。<br>2.语法：<code>&lt;td&gt;...&lt;/td&gt;</code><br>3.属性：属性width和height、属性align和valign、属性colspan和rowspan。<br>4.实例:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;body&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &lt;table border=<span class="string">"1"</span>&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;tr bgcolor=<span class="string">"#C0C0C0"</span>&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;th width=<span class="string">"130"</span> height=<span class="string">"50"</span>&gt;姓名&lt;/th&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&lt;th width=<span class="string">"130"</span> height=<span class="string">"50"</span>&gt;语文&lt;/th&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&lt;th width=<span class="string">"130"</span> height=<span class="string">"50"</span>&gt;数学&lt;/th&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&lt;th width=<span class="string">"130"</span> height=<span class="string">"50"</span>&gt;英语&lt;/th&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/tr&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;tr&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;td&gt;张三&lt;/td&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&lt;td&gt;85&lt;/td&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&lt;td&gt;90&lt;/td&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&lt;td&gt;95&lt;/td&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/tr&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;tr&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;td&gt;小明&lt;/td&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&lt;td&gt;95&lt;/td&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&lt;td&gt;80&lt;/td&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&lt;td&gt;95&lt;/td&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/tr&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &lt;/table&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/body&gt;</span></pre></td></tr></table></figure>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pLmJtcC5vdmgvaW1ncy8yMDIwLzAzLzkxYzFmMjk3NWMyMGI2YzEucG5n?x-oss-process=image/format,png" alt=""></p>
<h1 id="0X12-HTML表单标签"><a href="#0X12-HTML表单标签" class="headerlink" title="0X12 HTML表单标签"></a>0X12 HTML表单标签</h1><hr>
<h3 id="一、表单（Form）"><a href="#一、表单（Form）" class="headerlink" title="一、表单（Form）"></a>一、表单（Form）</h3><p>表单（Form）是HTML的一个重要部分，主要用于采集和提交用户输入的信息，使网页具有交互的功能。一般是将表单设计在一个HTML文档中，当用户填写完信息后做提交（submit）操作，表单的内容就被传送到服务器上，处理完毕后再将信息返回客户端。</p>
<h3 id="二、表单标签"><a href="#二、表单标签" class="headerlink" title="二、表单标签"></a>二、表单标签</h3><p>1.作用：表单标签用来创建一个表单，在标签对之间的都属于表单的内容。<br>2.语法：<code>&lt;form&gt;...&lt;/form&gt;</code><br>3.常用属性：属性action、属性method、属性target</p>
<h3 id="三、用户输入区域标签-lt-input-type-quot-quot-gt"><a href="#三、用户输入区域标签-lt-input-type-quot-quot-gt" class="headerlink" title="三、用户输入区域标签&lt;input type=&quot;&quot;&gt;"></a>三、用户输入区域标签<code>&lt;input type=&quot;&quot;&gt;</code></h3><h4 id="1-lt-input-type-quot-quot-gt-标签"><a href="#1-lt-input-type-quot-quot-gt-标签" class="headerlink" title="1.&lt;input type=&quot;&quot;&gt;标签"></a>1.<code>&lt;input type=&quot;&quot;&gt;</code>标签</h4><p>表单中提供给用户的形式一般使用<code>&lt;input type=&quot;&quot;&gt;</code>标签来实现，此标签用来定义一个用户输入区，用户可以在其中输入信息。<code>&lt;input type=&quot;&quot;&gt;</code>标签有多种类型输入区域，由type属性决定。需要注意的是该标签必须放在表单标签之间。</p>
<h4 id="2-单行文本输入框（input-type-”text”）"><a href="#2-单行文本输入框（input-type-”text”）" class="headerlink" title="2.单行文本输入框（input type=”text”）"></a>2.单行文本输入框（input type=”text”）</h4><p>实例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;form&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">   &lt;p&gt;username:&lt;input <span class="built_in">type</span>=<span class="string">"text"</span> name=<span class="string">"fname"</span> /&gt;&lt;/p&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line"> &lt;/form&gt;</span></pre></td></tr></table></figure>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9mdHAuYm1wLm92aC9pbWdzLzIwMjAvMDMvZmFiYTM1NzdiYTU0NzRjYy5wbmc?x-oss-process=image/format,png" alt=""></p>
<h4 id="3-密码输入框（input-type-”password”）"><a href="#3-密码输入框（input-type-”password”）" class="headerlink" title="3.密码输入框（input type=”password”）"></a>3.密码输入框（input type=”password”）</h4><p>实例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;form&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">   &lt;p&gt;password:&lt;input <span class="built_in">type</span>=<span class="string">"password"</span> name=<span class="string">"pwd"</span> /&gt;&lt;/p&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line"> &lt;/form&gt;</span></pre></td></tr></table></figure>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9mdHAuYm1wLm92aC9pbWdzLzIwMjAvMDMvZmIxMWNjZWJkOWQ4YWNlMy5wbmc?x-oss-process=image/format,png" alt=""></p>
<h4 id="4-单选框（input-type-”radio”）"><a href="#4-单选框（input-type-”radio”）" class="headerlink" title="4.单选框（input type=”radio”）"></a>4.单选框（input type=”radio”）</h4><p>实例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;form&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;input <span class="built_in">type</span>=<span class="string">"radio"</span> name=<span class="string">"alpabet"</span> value=<span class="string">"a"</span>&gt;A&lt;br&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;input <span class="built_in">type</span>=<span class="string">"radio"</span> name=<span class="string">"alpabet"</span> value=<span class="string">"b"</span>&gt;B</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/form&gt;</span></pre></td></tr></table></figure>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9mdHAuYm1wLm92aC9pbWdzLzIwMjAvMDMvYjIzZmRhZDdlOGJmZWE4YS5wbmc?x-oss-process=image/format,png" alt=""></p>
<h4 id="5-复选框（input-type-”checkbox”）"><a href="#5-复选框（input-type-”checkbox”）" class="headerlink" title="5.复选框（input type=”checkbox”）"></a>5.复选框（input type=”checkbox”）</h4><p>实例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;form&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;input <span class="built_in">type</span>=<span class="string">"checkbox"</span> name=<span class="string">"alpabet"</span> value=<span class="string">"a"</span>&gt;A&lt;br&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;input <span class="built_in">type</span>=<span class="string">"checkbox"</span> name=<span class="string">"alpabet"</span> value=<span class="string">"b"</span>&gt;B</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/form&gt;</span></pre></td></tr></table></figure>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9mdHAuYm1wLm92aC9pbWdzLzIwMjAvMDMvMjA3ODVmMDhlMWE1MDhiMy5wbmc?x-oss-process=image/format,png" alt=""></p>
<h4 id="6-提交（input-type-”submit”）"><a href="#6-提交（input-type-”submit”）" class="headerlink" title="6.提交（input type=”submit”）"></a>6.提交（input type=”submit”）</h4><p>实例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;form action=<span class="string">"xx.php method="</span>get<span class="string">"&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">   &lt;p&gt;username:&lt;input type="</span>text<span class="string">" name="</span>fname<span class="string">" /&gt;&lt;p&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">   &lt;p&gt;password:&lt;input type="</span>password<span class="string">" name="</span><span class="built_in">pwd</span><span class="string">" /&gt;&lt;p&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">   &lt;input type="</span>submit<span class="string">" value="</span>Submit<span class="string">" /&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">&lt;/form&gt;</span></span></pre></td></tr></table></figure>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9mdHAuYm1wLm92aC9pbWdzLzIwMjAvMDMvY2NmNjgwM2MxZDcyMTJkYS5wbmc?x-oss-process=image/format,png" alt=""></p>
<h4 id="7-重置（input-type-”reset”）"><a href="#7-重置（input-type-”reset”）" class="headerlink" title="7.重置（input type=”reset”）"></a>7.重置（input type=”reset”）</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;form&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">   &lt;p&gt;username:&lt;input <span class="built_in">type</span>=<span class="string">"text"</span> name=<span class="string">"fname"</span> /&gt;&lt;p&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">   &lt;p&gt;password:&lt;input <span class="built_in">type</span>=<span class="string">"password"</span> name=<span class="string">"pwd"</span> /&gt;&lt;p&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">   &lt;input <span class="built_in">type</span>=<span class="string">"reset"</span> value=<span class="string">"Reset"</span> /&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/form&gt;</span></pre></td></tr></table></figure>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9mdHAuYm1wLm92aC9pbWdzLzIwMjAvMDMvN2EwMTYyMzE3MWE3NDEwYi5wbmc?x-oss-process=image/format,png" alt=""></p>
<h4 id="8-图片提交"><a href="#8-图片提交" class="headerlink" title="8.图片提交"></a>8.图片提交</h4><p>实例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;form&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &lt;label&gt;选择图片文件&lt;/label&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line"> &lt;input name=<span class="string">"imgfile"</span> <span class="built_in">type</span>=<span class="string">"file"</span> accept=<span class="string">"image/gif, image/jpeg"</span>/&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &lt;input name=<span class="string">"upload"</span> <span class="built_in">type</span>=<span class="string">"submit"</span> value=<span class="string">"Submit"</span> /&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/form&gt;</span></pre></td></tr></table></figure>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zMi5heDF4LmNvbS8yMDIwLzAzLzA0LzNvTnNhdC5wbmc?x-oss-process=image/format,png" alt="3oNsat.png"></p>
<h4 id="9-上传（input-type-”file”）"><a href="#9-上传（input-type-”file”）" class="headerlink" title="9.上传（input type=”file”）"></a>9.上传（input type=”file”）</h4><p>实例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;form&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">   &lt;p&gt;&lt;input <span class="built_in">type</span>=<span class="string">"file"</span>&gt;&lt;/p&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">   &lt;input <span class="built_in">type</span>=<span class="string">"submit"</span> value=<span class="string">"submit"</span> /&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/form&gt;</span></pre></td></tr></table></figure>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zMi5heDF4LmNvbS8yMDIwLzAzLzA0LzNvTklabi5wbmc?x-oss-process=image/format,png" alt="3oNIZn.png"></p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>About Me</title>
    <url>/2020/03/01/About-Me/</url>
    <content><![CDATA[<p>作者：Sundry-Z<br>微信公众号：Sudry杂项<br>CSDN: <a href="https://me.csdn.net/AD_gnai" target="_blank" rel="noopener">https://me.csdn.net/AD_gnai</a><br>Github: <a href="http://github.com/Sundry-Z" target="_blank" rel="noopener">http://github.com/Sundry-Z</a><br>Weibo: <a href="https://weibo.com/u/6052471972" target="_blank" rel="noopener">https://weibo.com/u/6052471972</a><br>简书: <a href="https://www.jianshu.com/u/a4ced7a8167c" target="_blank" rel="noopener">https://www.jianshu.com/u/a4ced7a8167c</a></p>
<p><img src="https://s2.ax1x.com/2020/03/01/32QFfO.png" alt="32QFfO.png"></p>
<p><img src="https://s2.ax1x.com/2020/03/02/3RZShQ.png" alt="3RZShQ.png"></p>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>简介</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML基础（二）</title>
    <url>/2020/01/26/HTML%E5%9F%BA%E7%A1%80%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
    <content><![CDATA[<h1 id="0X06标题标签"><a href="#0X06标题标签" class="headerlink" title="0X06标题标签"></a>0X06标题标签</h1><p>1.HTML提供了将文本设置为标题显示的标签对，<code>&lt;hn&gt;...&lt;/hn&gt;</code>标签对。夹在标签对之间的文字为HTML文档的标题。标题大小一共有6种，其中<code>&lt;h1&gt;</code>标签括起来的文字是一级标题，<code>&lt;h6&gt;</code>标签所括起来的文字是最后一级标题。<a id="more"></a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">2.语法：&lt;hn&gt;...&lt;/hn&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">实例：</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;h1&gt;这是一级标题&lt;/h1&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;h2&gt;这是二级标题&lt;/h2&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;h3&gt;这是三级标题&lt;/h3&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;h4&gt;这是四级标题&lt;/h4&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;h5&gt;这是五级标题&lt;/h5&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;h6&gt;这是六级标题&lt;/h6&gt;</span></pre></td></tr></table></figure>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9mdHAuYm1wLm92aC9pbWdzLzIwMjAvMDEvNGI2NGZiOWIyNzUzYWMwNy5wbmc?x-oss-process=image/format,png" alt=""></p>
<h1 id="0X07字体修饰标签"><a href="#0X07字体修饰标签" class="headerlink" title="0X07字体修饰标签"></a><strong><em>0X07字体修饰标签</em></strong></h1><p>1.作用：字体修饰标签可进行设置文字的格式，如加粗，斜体，加下划线，加上标，下标等</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">2.语法:</span></pre></td></tr><tr><td class="code"><pre><span class="line">指定文字加粗：&lt;b&gt;...&lt;/b&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">指定文字设置为斜体：&lt;i&gt;...&lt;/i&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">指定文字设置下划线：&lt;u&gt;...&lt;/u&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">指定文字为打字机效果：&lt;tt&gt;...&lt;/tt&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">指定文字为上标：&lt;sup&gt;...&lt;/sup&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">对指定文字为下标：&lt;sub&gt;...&lt;/sub&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">指定对某段文字进行强调，通常用斜体字显示出来：&lt;em&gt;...&lt;/em&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">标签对文本进行强调，通常用粗体字显示出来：&lt;strong&gt;...&lt;/strong&gt;</span></pre></td></tr></table></figure>


<h1 id="0X08字体标签"><a href="#0X08字体标签" class="headerlink" title="0X08字体标签"></a><strong><em>0X08字体标签</em></strong></h1><p>1.Font标签可以设置文档的字体，通过改变其属性，对文本进行不同的设置，可以对文本的字体、大小、颜色等进行改变。<br>2.属性size</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">语法：&lt;font size=<span class="string">"npx"</span>&gt;...&lt;/font&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">实例：&lt;font size=<span class="string">"5px"</span>&gt;哈哈哈&lt;/font&gt;</span></pre></td></tr></table></figure>

<p>3.属性face</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">语法：&lt;font face=<span class="string">"verdana"</span> &gt;...&lt;/font&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">实例：&lt;font face=<span class="string">"verdana"</span> &gt;哈哈哈&lt;/font&gt;</span></pre></td></tr></table></figure>

<p>4.属性color</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">语法：&lt;font color=<span class="string">"十六进制颜色值"</span>&gt;...&lt;/font&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">实例：&lt;font color=<span class="string">"#F0F8FFF"</span>&gt;哈哈哈&lt;/font&gt;</span></pre></td></tr></table></figure>

<p>5.组合使用：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;font size=<span class="string">"5px"</span> face=<span class="string">"verdana"</span> color=<span class="string">"#F0F8FFF"</span>&gt;哈哈哈&lt;/font&gt;</span></pre></td></tr></table></figure>


<h1 id="0X09HTML超链接标签"><a href="#0X09HTML超链接标签" class="headerlink" title="0X09HTML超链接标签"></a><strong><em>0X09HTML超链接标签</em></strong></h1><p>一、HTML超链接<br>1.作用：HTML 使用超链接与网络上的另一个文档相连接，可以从一张页面跳转到另一张页面。<br>2.组成：由锚标和目标点组成，锚标就是链接的源点，当鼠标被移动到锚标处时会变成小手状。用户通过单击鼠标就可以到达链接的目标点。目标点可以是一张图片、一个网络文档、一个多媒体文件等。<br>二、属性href<br>1.herf是hypertext reference的缩略词，用于设定链接地址，其链接地址必须是URL地址，需要给出具体的路径。<br>2.HTML链接：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">语法：&lt;a href=<span class="string">"url"</span>&gt;链接文本&lt;/a&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">实例：&lt;a href=<span class="string">"https://sundry-z.github.io/"</span>&gt;访问我的博客&lt;/a&gt;</span></pre></td></tr></table></figure>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9mdHAuYm1wLm92aC9pbWdzLzIwMjAvMDEvMWUwNDk1ZjdlZTc0ZGVlNS5wbmc?x-oss-process=image/format,png" alt="">三、属性target<br>1.作用：控制打开链接的位置，属性值分为_blank、_self、_parent、_top。<br>2.用法：<br>target=”_blank”在新的浏览器窗口中打开链接的文档，同时保持当前窗口不变。<br>target=”_self”将链接的文档载入链接所在的同一框架或者窗口。<br>target=”_parenet”将链接的文档载入该链接所在框架的父框架或父窗口。<br>target=”_top”将链接的文档载入整个浏览器窗口，从而删除所有框架。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">3.语法：&lt;a herf=<span class="string">"url"</span> target=属性值&gt;...&lt;/a&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  实例：&lt;a href=<span class="string">"https://sundry-z.github.io/"</span> target=_blank&gt;访问我的博客&lt;/a&gt;</span></pre></td></tr></table></figure>

<p>四、属性name<br>1.作用：利用标签<code>&lt;a&gt;</code>的name属性可以实现文档内部的定位。先在文档内设定一个标签，称为”锚定位“，通过超链接标签<code>&lt;a&gt;</code>的href属性，可以跳转到已经设置好的”锚定位“标签的位置。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">2.语法：</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;a href=<span class="string">"#锚定位"</span>&gt;任意值&lt;/a&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">......</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;a name=<span class="string">"锚定位"</span>&gt;需要设置定位的文本&lt;/a&gt;</span></pre></td></tr></table></figure>

<p>3.实例：<br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9mdHAuYm1wLm92aC9pbWdzLzIwMjAvMDEvMGY5N2E4ZjQwNzg5ZWZhYi5wbmc?x-oss-process=image/format,png" alt=""></p>
<h1 id="0X10HTML图像标签"><a href="#0X10HTML图像标签" class="headerlink" title="0X10HTML图像标签"></a><strong><em>0X10HTML图像标签</em></strong></h1><p>一、用法<br>1.在HTML文档中插入图像是通过<code>&lt;img&gt;</code>标签来实现的，它只有起始标志，所有样式都是由<code>&lt;img&gt;</code>的属性决定的。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">2.语法：&lt;img 属性= <span class="string">"属性值"</span>&gt;</span></pre></td></tr></table></figure>

<p>二、属性src<br>1.src属性用来定义<code>&lt;img&gt;</code>图片的URL地址，URL表示图片的路径和文件名。URL可以是绝对路径，也可以是相对路径。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">2.语法：&lt;img src=<span class="string">"URL"</span>&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">实例：</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;img src=<span class="string">"http://img.crcz.com/allimg/201910/01/1569941080100048.jpg"</span>&gt;   //绝对路径</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;img src=<span class="string">".../images/1.jpg"</span>&gt;   //相对路径</span></pre></td></tr></table></figure>

<p>3.注意：如果图片URL的地址指定错误时，在浏览器页面中图片的位置将会出现一个红色“X”号<br>三、属性align<br>1.align属性的作用是对齐图片，可以改变图片的垂直（居上、居中、居下）对齐方式和水平对齐方式（居左、居中、居右）。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">2.语法：&lt;img align=<span class="string">"属性值"</span> src=<span class="string">"URL"</span>&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  实例：&lt;img align=<span class="string">"center"</span> src=<span class="string">"http://img.crcz.com/allimg/201910/01/1569941080100048.jpg"</span>&gt;</span></pre></td></tr></table></figure>

<p>四、属性height和width<br>1.width和height两个属性用来规定图像的大小，其中width属性用来确定图像的宽度，height属性用于确定图像的高度。默认情况下，浏览器窗口将自动调整图像的显示尺寸。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">2.语法：&lt;img width=<span class="string">"属性值px"</span> height=<span class="string">"属性值px"</span> src=<span class="string">"URL"</span>&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  实例：&lt;img width=<span class="string">"80px"</span> height=<span class="string">"80px"</span> src=<span class="string">"http://img.crcz.com/allimg/201910/01/1569941080100048.jpg"</span>&gt;</span></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML基础（一）</title>
    <url>/2020/01/25/HTML%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    <content><![CDATA[<h1 id="0X00-HTML"><a href="#0X00-HTML" class="headerlink" title="0X00 HTML"></a><strong><em>0X00 HTML</em></strong></h1><p>&emsp;HTML是一种超文本标记语言（英语：HyperText Markup Language，简称：HTML）是一种用于创建网页的标准标记语言。HTML是一种基础技术，常与CSS、JavaScript一起被众多网站用于设计网页、网页应用程序以及移动应用程序的用户界面。网页浏览器可以读取HTML文件，并将其渲染成可视化网页。HTML描述了一个网站的结构语义随着线索的呈现，使之成为一种标记语言而非编程语言。HTML元素是构建网站的基石。<a id="more"></a></p>
<h1 id="0x01主体标签"><a href="#0x01主体标签" class="headerlink" title="0x01主体标签"></a><strong><em>0x01主体标签</em></strong></h1><p>主题标签:<code>&lt;body&gt;...&lt;/body&gt;</code><br>1.<body>标签是成对出现的。在<body>…</body>标签对之间的内容，将显示在Web浏览器窗口的用户区域，它在HTML文档的主体部分。结束标签<script src="/live2dw/lib/L2Dwidget.min.js?094cbace49a39548bed64abff5988b05"></script><script>L2Dwidget.init({"pluginRootPath":"live2dw/","pluginJsPath":"lib/","pluginModelPath":"assets/","model":{"jsonPath":"live2d-widget-model-wanko"},"display":{"position":"right","width":150,"height":300},"mobile":{"show":true},"log":false,"tagMode":false});</script></body>指明主体区域的结尾。在<body>标签中可以规定整个文档的一些基本属性。<br>2.“bgcolor”:指定HTML文档的背景色。<br>3.“text”：指定HTML文档中文字的颜色。<br>4.“link”：指定HTML文档中待超链接对象的颜色。<br>5.“alink”：指定HTML文档中连接中超链接对象的颜色。<br>6.“vlink”：指定HTML文档中已连接超链接对象的颜色。<br>7.“background”：指定HTML文档的背景文件。<br>注意:1.HTML中“&lt;”、“&gt;”用编码表示法：“&amp;lt”<br>&emsp;&emsp;   2.显示空格使用“&amp;nbsp”</p>
<h1 id="0X02段落标签"><a href="#0X02段落标签" class="headerlink" title="0X02段落标签"></a><strong><em>0X02段落标签</em></strong></h1><p>段落标签：<code>&lt;p&gt;...&lt;/p&gt;</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1.语法：&lt;p align=<span class="string">"属性"</span> &gt;段落内容&lt;/p&gt;</span></pre></td></tr></table></figure>
<p>2.属性align的作用：设定水平对齐位置<br>常见设定值：置左(align=”left”)、居中(align=”center”)、置右(align=”right”)。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">3.实例：&lt;p align=<span class="string">"center"</span>&gt;啊啊啊啊啊&lt;/p&gt;</span></pre></td></tr></table></figure>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9mdHAuYm1wLm92aC9pbWdzLzIwMjAvMDEvMjNjOTkxNzA5ZjkwNjMxMy5wbmc?x-oss-process=image/format,png" alt=""></p>
<h1 id="0X03换行标签"><a href="#0X03换行标签" class="headerlink" title="0X03换行标签"></a><strong><em>0X03换行标签</em></strong></h1><p>1.作用：在不起另一段的情况下将当前文本强制换行。注意换行标签<code>&lt;br&gt;</code>是单独出现的，有起始标签，但是没有结束标签。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">2.语法：&lt;p&gt;内容&lt;br&gt;内容&lt;/p&gt;</span></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">3.实例：&lt;p&gt;aaaaaaaa&lt;br&gt;111111111&lt;/p&gt;</span></pre></td></tr></table></figure>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9mdHAuYm1wLm92aC9pbWdzLzIwMjAvMDEvYzUxZTlhODk5NjJmMDhiOC5wbmc?x-oss-process=image/format,png" alt=""></p>
<h1 id="0X04预格式化标签"><a href="#0X04预格式化标签" class="headerlink" title="0X04预格式化标签"></a><strong><em>0X04预格式化标签</em></strong></h1><p>1.作用：完整的保留设计者在源文件中所定义的格式，包括各种空格，缩进，以及其他特殊的格式。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">2.语法：</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;pre&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 内容</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/pre&gt;</span></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">3.实例：</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;pre&gt;     </span></pre></td></tr><tr><td class="code"><pre><span class="line">   1111111</span></pre></td></tr><tr><td class="code"><pre><span class="line">     11111</span></pre></td></tr><tr><td class="code"><pre><span class="line"> 11111</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/pre&gt;</span></pre></td></tr></table></figure>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9mdHAuYm1wLm92aC9pbWdzLzIwMjAvMDEvMzFmYmU0ZGY2YmNhMzQ0OS5wbmc?x-oss-process=image/format,png" alt=""></p>
<h1 id="0X05列表标签"><a href="#0X05列表标签" class="headerlink" title="0X05列表标签"></a><strong><em>0X05列表标签</em></strong></h1><p>&emsp;HTML文档中使用的列表主要有无序列表、有序列表、日录列表、菜单列表、描述性列表五种类型。小编在这里着重介绍无序列表、有序列表、自定义列表用法。<br>一、无序列表：无序列表是一个项目的列表，此列项目使用粗体圆点进行标记。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1.语法：无序列表使用 &lt;ul&gt; 标签</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;ul&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;li&gt;内容&lt;/li&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;li&gt;内容&lt;/li&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/ul&gt;</span></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">2.实例：</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;ul&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;li&gt;AAAA&lt;/li&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;li&gt;BBBB&lt;/li&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/ul&gt;</span></pre></td></tr></table></figure>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9mdHAuYm1wLm92aC9pbWdzLzIwMjAvMDEvNzYzMTljOWU1YThhNzUyMi5wbmc?x-oss-process=image/format,png" alt=""><br>二、有序列表：有序列表也是一列项目，列表项目使用数字进行标记。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1.语法：有序列表用 &lt;ol&gt; 标签</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;ol&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;li&gt;内容&lt;/li&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;li&gt;内容&lt;/li&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/ol&gt;</span></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">2.实例：</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;ol&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;li&gt;AAAA&lt;/li&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;li&gt;BBBB&lt;/li&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/ol&gt;</span></pre></td></tr></table></figure>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9mdHAuYm1wLm92aC9pbWdzLzIwMjAvMDEvZmU5NTU3NzNkYjBmM2ZhNi5wbmc?x-oss-process=image/format,png" alt=""><br>三、自定义列表<br>1.语法：自定义列表以 <code>&lt;dl&gt;</code> 标签开始，每个自定义列表项以 <code>&lt;dt&gt;</code> 开始，每个自定义列表项的定义以 <code>&lt;dd&gt;</code> 开始。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;dl&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;dt&gt;内容&lt;/dt&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;dd&gt;- 定义内容&lt;/dd&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;dt&gt;内容&lt;/dt&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;dd&gt;- 定义内容&lt;/dd&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/dl&gt;</span></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">2.实例：</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;dl&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;dt&gt;AAAA&lt;/dt&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;dd&gt;- 这是英文字母&lt;/dd&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;dt&gt;1111&lt;/dt&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;dd&gt;- 这是阿拉伯数字&lt;/dd&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/dl&gt;</span></pre></td></tr></table></figure>

<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9mdHAuYm1wLm92aC9pbWdzLzIwMjAvMDEvMzY5ZDJlODJkZjIxNzgyOS5wbmc?x-oss-process=image/format,png" alt=""></p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>静态路由和缺省路由的配置</title>
    <url>/2020/01/09/%E9%9D%99%E6%80%81%E8%B7%AF%E7%94%B1%E5%92%8C%E7%BC%BA%E7%9C%81%E8%B7%AF%E7%94%B1%E7%9A%84%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="0X00前言"><a href="#0X00前言" class="headerlink" title="0X00前言"></a><strong><em>0X00前言</em></strong></h1><p>&emsp;静态路由：静态路由是一种路由的方式，路由项由手动配置，而非动态决定。静态路由是固定的，不会改变，即使网络状况已经改变或是重新被组态。一般来说，静态路由是由网络管理员逐项加入路由表中的。<br>&emsp;缺省路由：在通信网络中，缺省路由是当网络主机上没有特定路由时而设置的数据包转发规则，可以给出一个默认的下一跳地址，路由表中没有匹配项的所有数据包都通过缺省路由进行转发。<a id="more"></a></p>
<h1 id="0X01拓扑图"><a href="#0X01拓扑图" class="headerlink" title="0X01拓扑图"></a><strong><em>0X01拓扑图</em></strong></h1><p><img src="https://s2.ax1x.com/2020/01/09/lWKZ7T.png" alt="lWKZ7T.png"></p>
<h1 id="0X02基础配置"><a href="#0X02基础配置" class="headerlink" title="0X02基础配置"></a><strong><em>0X02基础配置</em></strong></h1><h2 id="一、配置路由器R1"><a href="#一、配置路由器R1" class="headerlink" title="一、配置路由器R1"></a>一、配置路由器R1</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">system-view    &#x2F;&#x2F;进入系统视图，注意后面代码中，&lt;&gt;代表用户视图，[]代表系统视图</span></pre></td></tr><tr><td class="code"><pre><span class="line">sysname R1    &#x2F;&#x2F;将路由器改名为R1</span></pre></td></tr><tr><td class="code"><pre><span class="line">[R1]interface GigabitEthernet 0&#x2F;0&#x2F;0   &#x2F;&#x2F;进入G0&#x2F;0&#x2F;0端口</span></pre></td></tr><tr><td class="code"><pre><span class="line">[R1-GigabitEthernet0&#x2F;0&#x2F;0]ip address 10.0.13.1 24    &#x2F;&#x2F;设置ip</span></pre></td></tr><tr><td class="code"><pre><span class="line">[R1-GigabitEthernet0&#x2F;0&#x2F;0]quit   &#x2F;&#x2F;退出系统视图</span></pre></td></tr><tr><td class="code"><pre><span class="line">[R1]interface GigabitEthernet 0&#x2F;0&#x2F;1    &#x2F;&#x2F;进入G0&#x2F;0&#x2F;1端口</span></pre></td></tr><tr><td class="code"><pre><span class="line">[R1-GigabitEthernet0&#x2F;0&#x2F;1]ip address 10.0.12.1 24    &#x2F;&#x2F;设置ip地址</span></pre></td></tr><tr><td class="code"><pre><span class="line">[R1-GigabitEthernet0&#x2F;0&#x2F;1]quit    &#x2F;&#x2F;退出系统视图</span></pre></td></tr><tr><td class="code"><pre><span class="line">[R1]interface LoopBack 0    &#x2F;&#x2F;进入LoopBack端口</span></pre></td></tr><tr><td class="code"><pre><span class="line">[R1-LoopBack0]ip address 10.0.1.1 24    &#x2F;&#x2F;设置ip</span></pre></td></tr></table></figure>
<h2 id="二、查看R1配置情况"><a href="#二、查看R1配置情况" class="headerlink" title="二、查看R1配置情况"></a>二、查看R1配置情况</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;R1&gt;display ip interface brief    &#x2F;&#x2F;在用户视图下输入这行命令</span></pre></td></tr></table></figure>
<p><img src="https://s2.ax1x.com/2020/01/09/lWKptg.png" alt="lWKptg.png"></p>
<h2 id="三、配置路由器R2"><a href="#三、配置路由器R2" class="headerlink" title="三、配置路由器R2"></a>三、配置路由器R2</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">system-view</span></pre></td></tr><tr><td class="code"><pre><span class="line">sysname R2</span></pre></td></tr><tr><td class="code"><pre><span class="line">[R2]interface GigabitEthernet 0&#x2F;0&#x2F;1</span></pre></td></tr><tr><td class="code"><pre><span class="line">[R2-GigabitEthernet0&#x2F;0&#x2F;1]ip address 10.0.12.2 24</span></pre></td></tr><tr><td class="code"><pre><span class="line">[R2-GigabitEthernet0&#x2F;0&#x2F;1]quit</span></pre></td></tr><tr><td class="code"><pre><span class="line">[R2]interface GigabitEthernet 0&#x2F;0&#x2F;2</span></pre></td></tr><tr><td class="code"><pre><span class="line">[R2-GigabitEthernet0&#x2F;0&#x2F;2]ip address 10.0.23.2 24</span></pre></td></tr><tr><td class="code"><pre><span class="line">[R2-GigabitEthernet0&#x2F;0&#x2F;2]quit</span></pre></td></tr><tr><td class="code"><pre><span class="line">[R2]interface LoopBack0</span></pre></td></tr><tr><td class="code"><pre><span class="line">[R2-LoopBack0]ip address 10.0.2.2 24</span></pre></td></tr></table></figure>
<h2 id="四、查看R2配置情况"><a href="#四、查看R2配置情况" class="headerlink" title="四、查看R2配置情况"></a>四、查看R2配置情况</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;R2&gt;display ip interface brief</span></pre></td></tr></table></figure>
<p><img src="https://s2.ax1x.com/2020/01/09/lWKgUS.png" alt="lWKgUS.png"></p>
<h2 id="五、配置路由器R3"><a href="#五、配置路由器R3" class="headerlink" title="五、配置路由器R3"></a>五、配置路由器R3</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">system-view</span></pre></td></tr><tr><td class="code"><pre><span class="line">sysname R3</span></pre></td></tr><tr><td class="code"><pre><span class="line">[R3]interface GigabitEthernet 0&#x2F;0&#x2F;0</span></pre></td></tr><tr><td class="code"><pre><span class="line">[R3-GigabitEthernet0&#x2F;0&#x2F;0]ip address 10.0.13.3 24</span></pre></td></tr><tr><td class="code"><pre><span class="line">[R3-GigabitEthernet0&#x2F;0&#x2F;0]quit</span></pre></td></tr><tr><td class="code"><pre><span class="line">[R3]interface GigabitEthernet0&#x2F;0&#x2F;2</span></pre></td></tr><tr><td class="code"><pre><span class="line">[R3-GigabitEthernet0&#x2F;0&#x2F;2]ip address 10.0.23.3 24</span></pre></td></tr><tr><td class="code"><pre><span class="line">[R3-GigabitEthernet0&#x2F;0&#x2F;2]quit</span></pre></td></tr><tr><td class="code"><pre><span class="line">[R3]interface LoopBack 0</span></pre></td></tr><tr><td class="code"><pre><span class="line">[R3-LoopBack0]ip address 10.0.3.3 24</span></pre></td></tr></table></figure>
<h2 id="六、查看R3配置情况"><a href="#六、查看R3配置情况" class="headerlink" title="六、查看R3配置情况"></a>六、查看R3配置情况</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;R3&gt;display ip interface brief</span></pre></td></tr></table></figure>
<p><img src="https://s2.ax1x.com/2020/01/09/lWMYMn.png" alt="lWMYMn.png"></p>
<h2 id="七、ping"><a href="#七、ping" class="headerlink" title="七、ping"></a>七、ping</h2><p>执行ping命令，检查R1、R2与其他设备间的连通性，发现可以ping通。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;R1&gt;ping 10.0.12.2</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;R1&gt;ping 10.0.13.3</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;R2&gt;ping 10.0.23.3</span></pre></td></tr></table></figure>
<h1 id="0X03测试连通性"><a href="#0X03测试连通性" class="headerlink" title="0X03测试连通性"></a><strong><em>0X03测试连通性</em></strong></h1><p>测试R2到10.0.13.0/24、10.0.3.0/24的连通性</p>
<h2 id="一、ping"><a href="#一、ping" class="headerlink" title="一、ping"></a>一、ping</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;R2&gt;ping 10.0.13.3</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;R2&gt;ping 10.0.3.3</span></pre></td></tr></table></figure>
<p>ping完后发现网络之间是ping不通的。</p>
<h2 id="二、查看路由表"><a href="#二、查看路由表" class="headerlink" title="二、查看路由表"></a>二、查看路由表</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;R2&gt;display ip routing-table</span></pre></td></tr></table></figure>
<p><img src="https://s2.ax1x.com/2020/01/09/lWM5Je.png" alt="lWM5Je.png"><br> &emsp;查看R2的路由表发现，路由表中没有去往这两个网段路由的信息。R2如果要与10.0.3.0/24网络通信，需要R2上有去往该网段的路由信息，并且R3上也需要有到R2相应接口所在IP网段的路由信息。</p>
<h1 id="0X04在R2上配置静态路由"><a href="#0X04在R2上配置静态路由" class="headerlink" title="0X04在R2上配置静态路由"></a><strong><em>0X04在R2上配置静态路由</em></strong></h1><h2 id="一、"><a href="#一、" class="headerlink" title="一、"></a>一、</h2><p>&emsp;配置目的地址为10.0.13.0/24和10.0.3.0/24的静态路由，路由的下一跳配置为R3的G0/0/0接口，IP地址10.0.23.3。默认静态路由优先级为60.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[R2]ip route-static 10.0.13.0 24 10.0.23.3  &#x2F;&#x2F;24代表子网掩码长度</span></pre></td></tr><tr><td class="code"><pre><span class="line">[R2]ip route-static 10.0.3.0 24 10.0.23.3  &#x2F;&#x2F;24也可写255.255.255.0</span></pre></td></tr></table></figure>
<h2 id="二、查看路由表-1"><a href="#二、查看路由表-1" class="headerlink" title="二、查看路由表"></a>二、查看路由表</h2><p><img src="https://s2.ax1x.com/2020/01/09/lWMxJg.png" alt="lWMxJg.png"></p>
<h1 id="0X05配置备份静态路由"><a href="#0X05配置备份静态路由" class="headerlink" title="0X05配置备份静态路由"></a><strong><em>0X05配置备份静态路由</em></strong></h1><p>&emsp;R2与网络10.0.13.3和10.0.3.3之间交互的数据通过R2与R3间的链路传输。根据拓扑图可以看出，当R2和R3间的链路发生故障时，R2将不能与网络10.0.13.3和10.0.3.3通信。 但是R2可以通过R1与R3通信。所以可以通过配置一条备份静态路由实现路由的冗余备份。<br>&emsp;注意在正常情况下，备份静态路由是不生效的。当R2和R3间的链路发生故障时，才使用备份静态路由传输数据。 所以在配置备份静态路由时，需要修改备份静态路由的优先级，确保只有主链路故障时才使用备份路由。本实验将备份静态路由的优先级修改为80。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[R1]ip route-static 10.0.3.0 24 10.0.13.3</span></pre></td></tr><tr><td class="code"><pre><span class="line">[R2]ip route-static 10.0.13.0 255.255.255.0 10.0.12.1 preference 80</span></pre></td></tr><tr><td class="code"><pre><span class="line">[R2]ip route-static 10.0.3.0 24 10.0.12.1 preference 80</span></pre></td></tr><tr><td class="code"><pre><span class="line">[R3]ip route-static 10.0.12.0 24 10.0.13.1</span></pre></td></tr></table></figure>
<h1 id="0X06验证静态路由"><a href="#0X06验证静态路由" class="headerlink" title="0X06验证静态路由"></a><strong><em>0X06验证静态路由</em></strong></h1><h2 id="一、-1"><a href="#一、-1" class="headerlink" title="一、"></a>一、</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;R2&gt;display ip routing-table</span></pre></td></tr></table></figure>
<h2 id="二、"><a href="#二、" class="headerlink" title="二、"></a>二、</h2><p>&emsp;当R2和R3之间链路正常时，R2与网络10.0.13.3和10.0.3.3之间交互的数据通过R2与R3间的链路传输。执行tracert命令，查看数据的传输路径。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;R2&gt;tracert 10.0.13.3</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;R2&gt;tracert 10.0.3.3</span></pre></td></tr></table></figure>
<p><img src="https://s2.ax1x.com/2020/01/09/lWlmAf.png" alt="lWlmAf.png"></p>
<h1 id="0X07验证备份静态路由"><a href="#0X07验证备份静态路由" class="headerlink" title="0X07验证备份静态路由"></a><strong><em>0X07验证备份静态路由</em></strong></h1><h2 id="一、模拟故障"><a href="#一、模拟故障" class="headerlink" title="一、模拟故障"></a>一、模拟故障</h2><p>关闭R2上的G0/0/2接口，模拟R2与R3间链路发生故障。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[R2]interface GigabitEthernet 0&#x2F;0&#x2F;2</span></pre></td></tr><tr><td class="code"><pre><span class="line">[R2-GigabitEthernet0&#x2F;0&#x2F;2]shutdown</span></pre></td></tr><tr><td class="code"><pre><span class="line">[R2-GigabitEthernet0&#x2F;0&#x2F;2]quit</span></pre></td></tr></table></figure>
<h2 id="二、查看路由表-2"><a href="#二、查看路由表-2" class="headerlink" title="二、查看路由表"></a>二、查看路由表</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;R2&gt;display ip routing-table</span></pre></td></tr></table></figure>
<p><img src="https://s2.ax1x.com/2020/01/09/lWlgUK.png" alt="lWlgUK.png"></p>
<h2 id="三、检测连通性"><a href="#三、检测连通性" class="headerlink" title="三、检测连通性"></a>三、检测连通性</h2><p>检测R2到目的地址10.0.13.3。10.0.3.3的连通性，发现可以ping通。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;R2&gt;ping 10.0.3.3</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;R2&gt;ping 10.0.3.3</span></pre></td></tr></table></figure>
<h2 id="四、查看回显"><a href="#四、查看回显" class="headerlink" title="四、查看回显"></a>四、查看回显</h2><p>执行tracert命令，查看数据包的转发路径，命令的回显信息表明，R2发送的数据经过R1抵达R3设备。<br><img src="https://s2.ax1x.com/2020/01/09/lWlHVP.png" alt="lWlHVP.png"></p>
<h1 id="0X08-配置缺省路由实现网络互通"><a href="#0X08-配置缺省路由实现网络互通" class="headerlink" title="0X08 配置缺省路由实现网络互通"></a><strong><em>0X08 配置缺省路由实现网络互通</em></strong></h1><h2 id="一、打开R2中关闭的接口"><a href="#一、打开R2中关闭的接口" class="headerlink" title="一、打开R2中关闭的接口"></a>一、打开R2中关闭的接口</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[R2]interface GigabitEthernet 0&#x2F;0&#x2F;2</span></pre></td></tr><tr><td class="code"><pre><span class="line">[R2-GigabitEthernet0&#x2F;0&#x2F;2]undo shutdown</span></pre></td></tr></table></figure>
<h2 id="二、验证连通性"><a href="#二、验证连通性" class="headerlink" title="二、验证连通性"></a>二、验证连通性</h2><p>验证R1到10.0.23.3的连通性，发现ping不通。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[R1]ping 10.0.23.3</span></pre></td></tr></table></figure>
<h2 id="三、实现连通性"><a href="#三、实现连通性" class="headerlink" title="三、实现连通性"></a>三、实现连通性</h2><p>在R1上配置一条下一跳为10.0.13.3的缺省路由来实现网络的连通。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[R1]ip route-static 0.0.0.0 0.0.0.0 10.0.13.3</span></pre></td></tr></table></figure>
<h2 id="四、ping10-0-23-3"><a href="#四、ping10-0-23-3" class="headerlink" title="四、ping10.0.23.3"></a>四、ping10.0.23.3</h2><p>再次ping10.0.23.3，发现可以ping通。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;R1&gt;ping 10.0.23.3</span></pre></td></tr></table></figure>
<h1 id="0X09配置备份缺省路由"><a href="#0X09配置备份缺省路由" class="headerlink" title="0X09配置备份缺省路由"></a><strong><em>0X09配置备份缺省路由</em></strong></h1><p>&emsp;当R1与R3间的链路发生故障时，R1可以使用备份缺省路由通过R2实现与10.0.23.3和10.0.3.3网络间通信。 所以配置两条备份路由，确保数据来回的双向都有路由。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[R1]ip route-static 0.0.0.0 0.0.0.0 10.0.12.2 preference 80</span></pre></td></tr><tr><td class="code"><pre><span class="line">[R3]ip route-static 10.0.12.0 24 10.0.23.2 preference 80</span></pre></td></tr></table></figure>
<h1 id="0X10验证备份缺省路由"><a href="#0X10验证备份缺省路由" class="headerlink" title="0X10验证备份缺省路由"></a><strong><em>0X10验证备份缺省路由</em></strong></h1><h2 id="一、查看链路正常时R1上的路由条目。"><a href="#一、查看链路正常时R1上的路由条目。" class="headerlink" title="一、查看链路正常时R1上的路由条目。"></a>一、查看链路正常时R1上的路由条目。</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;R1&gt;display ip routing-table</span></pre></td></tr></table></figure>
<p><img src="https://s2.ax1x.com/2020/01/09/lW1DJS.png" alt="lW1DJS.png"></p>
<h2 id="二、模拟故障查看路由表"><a href="#二、模拟故障查看路由表" class="headerlink" title="二、模拟故障查看路由表"></a>二、模拟故障查看路由表</h2><p>关闭R1与R3上的G0/0/0接口模拟链路故障，然后查看R1的路由表。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[R1]interface GigabitEthernet 0&#x2F;0&#x2F;0</span></pre></td></tr><tr><td class="code"><pre><span class="line">[R1-GigabitEthernet0&#x2F;0&#x2F;0]shutdown</span></pre></td></tr><tr><td class="code"><pre><span class="line">[R1-GigabitEthernet0&#x2F;0&#x2F;0]quit</span></pre></td></tr><tr><td class="code"><pre><span class="line">[R3]interface GigabitEthernet 0&#x2F;0&#x2F;0</span></pre></td></tr><tr><td class="code"><pre><span class="line">[R3-GigabitEthernet0&#x2F;0&#x2F;0]shutdown</span></pre></td></tr><tr><td class="code"><pre><span class="line">[R3-GigabitEthernet0&#x2F;0&#x2F;0]quit</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;R1&gt;display ip routing-table</span></pre></td></tr></table></figure>
<p><img src="https://s2.ax1x.com/2020/01/09/lW1Le1.png" alt="lW1Le1.png"><br>对比发现上述路由表中，缺省路由0.0.0.0的Preference值为80，表明备用的缺省路由已生效。</p>
<h2 id="三、ping-10-0-23-3"><a href="#三、ping-10-0-23-3" class="headerlink" title="三、ping 10.0.23.3"></a>三、ping 10.0.23.3</h2><p>再次ping10.0.23.3，可以ping通</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;R1&gt;ping 10.0.23.3</span></pre></td></tr></table></figure>
<h2 id="四、执行tracert命令"><a href="#四、执行tracert命令" class="headerlink" title="四、执行tracert命令"></a>四、执行tracert命令</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;R1&gt;tracert 10.0.23.3</span></pre></td></tr></table></figure>
<p><img src="https://s2.ax1x.com/2020/01/09/lW3kwt.png" alt="lW3kwt.png"><br>发现当R1与R3之间的链路断了的时候，报文通过R2（10.0.12.2）到达R3（10.0.23.3）</p>
<h1 id="0x11总结"><a href="#0x11总结" class="headerlink" title="0x11总结"></a><strong><em>0x11总结</em></strong></h1><p>&emsp;小编在这里主要简单介绍了静态路由，备份静态路由，缺省路由，备份缺省路由的配置。因为搭建的拓扑比较简单，只是简单介绍一下基础的原理。可能有些过程比较绕，表达不太清楚，但对着拓扑图稍稍研究下便可以理解。</p>
]]></content>
      <categories>
        <category>网络</category>
      </categories>
      <tags>
        <tag>网络</tag>
        <tag>路由</tag>
      </tags>
  </entry>
  <entry>
    <title>如何利用GitHub-Hexo搭建个人博客</title>
    <url>/2019/12/01/%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8GitHub-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h1 id="0X01前言"><a href="#0X01前言" class="headerlink" title="0X01前言"></a><strong><em>0X01前言</em></strong></h1><h2 id="一、博客"><a href="#一、博客" class="headerlink" title="一、博客"></a>一、博客</h2><p>  &emsp;&emsp;Blog是以网络作为载体，简易迅速便捷地发布自己的心得，及时有效轻松地与他人进行交流，集丰富多彩的个性化展示于一体的综合性平台。Blog是继Email、BBS、ICQ、之后出现的第四种网络交流方式，至今已十分受大家的欢迎。是网络时代的个人“读者文摘”，是以超级链接为入口的网络日记，是代表着新的生活方式和新的工作方式，更代表着新的学习方式。具体说来，博客这个概念解释为使用特定的软件，在网络上出版，发表和张贴个人文章的人。<a id="more"></a></p>
<h2 id="二、GitHub"><a href="#二、GitHub" class="headerlink" title="二、GitHub"></a>二、GitHub</h2><p>  &emsp;&emsp;GitHub是通过Git进行版本控制的软件源代码托管服务平台，由GitHub公司（曾称Logical Awesome）的开发者Chris Wanstrath、PJ Hyett和Tom Preston-Werner使用Ruby  On Rails编写而成。GitHub提供付费账户和免费账户。这两种账户都可以创建公开或私有的代码仓库，但付费用户支持更多功能。根据在2009年的Git用户调查，GitHub是最流行的Git访问站点。除了允许个人和组织创建和访问保管中的代码以外，它也提供了一些方便社会化共同软件开发的功能，即一般人口中的社群功能，包括允许用户追踪其他用户、组织、软件库的动态，对软件代码的改动和bug提出评论等。GitHub也提供了图表功能，用于概观显示开发者们怎样在代码库上工作以及软件的开发活跃程度。GitHub已经成为了世界上最大的代码存放网站和开源社区。</p>
<h2 id="三、Hexo"><a href="#三、Hexo" class="headerlink" title="三、Hexo"></a>三、Hexo</h2><p>  &emsp;&emsp;Hexo是一款基于Node.js的静态博客框架，依赖少，易于安装使用，可以方便的生成静态网页。托管在GitHub和Heroku上，Hexo是一个快速、简洁且高效的博客框架。它使用Markdown解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
<h2 id="四、Git"><a href="#四、Git" class="headerlink" title="四、Git"></a>四、Git</h2><p>  &emsp;&emsp;Git是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理。Git 是Linus Torvalds为了帮助管理Linux 内核开发而开发的一个开放源码的版本控制软件。分布式相比于集中式的最大区别在于开发者可以提交到本地，每个开发者通过克隆（git clone），在本地机器上拷贝一个完整的Git仓库。</p>
<h2 id="五、Node-js"><a href="#五、Node-js" class="headerlink" title="五、Node.js"></a>五、Node.js</h2><p>  &emsp;&emsp;Node.js是能够在服务器端运行JavaScript的开源代码、跨平台JavaScript运行环境。Node.js采用Google开发的V8运行代码，使用事件驱动、非阻塞和异步输入输出模型等技术来提高性能，可优化应用程序的传输量和规模。这些技术通常用于数据密集的即时应用程序。</p>
<h1 id="0X02准备"><a href="#0X02准备" class="headerlink" title="0X02准备"></a><strong><em>0X02准备</em></strong></h1><h2 id="一、安装Git"><a href="#一、安装Git" class="headerlink" title="一、安装Git"></a>一、安装Git</h2><p>Git下载网址：<a href="https://git-scm.com/download/win" target="_blank" rel="noopener">https://git-scm.com/download/win</a><br>Git使用教程网址：<a href="https://www.liaoxuefeng.com/wiki/896043488029600" target="_blank" rel="noopener">https://www.liaoxuefeng.com/wiki/896043488029600</a><br>本文以Windows安装64位的为例，从网站下载完安装包后点击安装，安装完成，打开软件，出现下图的界面则说明Git安装成功。<br><img src="https://s2.ax1x.com/2019/11/29/QAdRB9.jpg" alt="QAdRB9.jpg"></p>
<h2 id="二、安装Node-js及环境变量npm的安装"><a href="#二、安装Node-js及环境变量npm的安装" class="headerlink" title="二、安装Node.js及环境变量npm的安装"></a>二、安装Node.js及环境变量npm的安装</h2><p>Node.js下载地址：<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">https://nodejs.org/en/download/</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">node -v  &#x2F;&#x2F;安装完成后，打开CMD，输入该命令检测Ndoe安装是否成功，成功如下图所示。</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm -v  &#x2F;&#x2F;打开CMD,输入该命令，检测npm环境安装是否成功，成功如下图所示。</span></pre></td></tr></table></figure>
<p><img src="https://s2.ax1x.com/2019/11/30/QVv3Xq.png" alt="QVv3Xq.png"><br><a href="https://imgse.com/i/QVvY7T" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/11/30/QVvY7T.md.png" alt="QVvY7T.md.png"></a></p>
<h1 id="0X03搭建"><a href="#0X03搭建" class="headerlink" title="0X03搭建"></a><strong><em>0X03搭建</em></strong></h1><h2 id="一、注册账号"><a href="#一、注册账号" class="headerlink" title="一、注册账号"></a>一、注册账号</h2><p>在GitHub上注册一个自己的账号，具体注册操作不演示了，相信小伙伴们都会。<br>GitHub网站地址：<a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a></p>
<h2 id="二、创建新仓库"><a href="#二、创建新仓库" class="headerlink" title="二、创建新仓库"></a>二、创建新仓库</h2><p>在GitHub中的New repository创建新仓库，仓库名字格式为:用户名.github.io</p>
<p><a href="https://imgse.com/i/QVvsnx" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/11/30/QVvsnx.md.png" alt="QVvsnx.md.png"></a><br><a href="https://imgse.com/i/QVv2ND" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/11/30/QVv2ND.md.png" alt="QVv2ND.md.png"></a></p>
<h2 id="三、配置信息"><a href="#三、配置信息" class="headerlink" title="三、配置信息"></a>三、配置信息</h2><p>打开Git bash(在桌面右键选择Git bash Here或者在菜单中搜索Git bash)，输入以下命令。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global user.name  &#x2F;&#x2F;&quot;你GitHub用户名&quot; 设置user.name配置信息</span></pre></td></tr><tr><td class="code"><pre><span class="line">git config --global user.email &#x2F;&#x2F;&quot;你GitHub注册邮箱&quot; 设置user.email配置信息</span></pre></td></tr></table></figure>
<h2 id="四、生成密钥"><a href="#四、生成密钥" class="headerlink" title="四、生成密钥"></a>四、生成密钥</h2><p>用Git bash生成ssh密钥文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你的GitHub注册邮箱&quot;</span></pre></td></tr></table></figure>
<p>此时在你的本地（默认在C盘）会生成一个.ssh文件夹，里面包含id_rsa和id_rsa.pub两个文件。打开id_rsa.pub将里面的内容全部复制到GitHub的SSH and GPG keys中。<br>(ps:在这里小编推荐一个在windows中十分好用的文件搜索软件：Everything)<br><img src="https://s2.ax1x.com/2019/11/29/QAdumd.png" alt="QAdumd.png"><br><img src="https://s2.ax1x.com/2019/11/29/QAaai6.png" alt="QAaai6.png"><br><img src="https://s2.ax1x.com/2019/11/29/QAaDQe.png" alt="QAaDQe.png"><br><img src="https://s2.ax1x.com/2019/11/29/QAaxlF.png" alt="QAaxlF.png"><br><img src="https://s2.ax1x.com/2019/11/29/QAdkY6.png" alt="QAdkY6.png"></p>
<h2 id="五、检测公钥"><a href="#五、检测公钥" class="headerlink" title="五、检测公钥"></a>五、检测公钥</h2><p>在Git Bash中输入下面命令检测GitHub公钥设置是否成功</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh git@github.com</span></pre></td></tr></table></figure>
<p><img src="https://s2.ax1x.com/2019/11/29/QAwhrQ.png" alt="QAwhrQ.png"><br>此时说明GitHub公钥设置成功。</p>
<h2 id="六、安装Hexo"><a href="#六、安装Hexo" class="headerlink" title="六、安装Hexo"></a>六、安装Hexo</h2><p>建立一个文件夹，这里小编建议以Blog命名，将Hexo框架与以后你自己发布的网页都放在这个文件夹中。进入文件夹后，在文件夹内打开CMD。在此特别强调，一定要在刚创建的Blog文件夹中打开。输入下面的命令。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli  &#x2F;&#x2F;安装Hexo</span></pre></td></tr><tr><td class="code"><pre><span class="line">hexo init blog  &#x2F;&#x2F;初始化我们的博客</span></pre></td></tr></table></figure>

<h2 id="七、检查雏形"><a href="#七、检查雏形" class="headerlink" title="七、检查雏形"></a>七、检查雏形</h2><p>安装完成后，按顺序输入下面代码，检测我们的网站雏形。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new test_my_site</span></pre></td></tr><tr><td class="code"><pre><span class="line">hexo g</span></pre></td></tr><tr><td class="code"><pre><span class="line">hexo s</span></pre></td></tr></table></figure>

<h2 id="八、本地查看"><a href="#八、本地查看" class="headerlink" title="八、本地查看"></a>八、本地查看</h2><p>完成上面的操作后，祝贺你，已经可以在本地打开你的博客平台了。打开浏览器输入localhost:4000,此时可以看到你博客平台的模样。但是搭建博客肯定不是给自己欣赏的啊，所以要下面要做的是推送网站，顾名思义就是发布网站。</p>
<h2 id="九、关联Hexo与GitHub"><a href="#九、关联Hexo与GitHub" class="headerlink" title="九、关联Hexo与GitHub"></a>九、关联Hexo与GitHub</h2><p>将我们的Hexo与GitHub关联起来，打开站点的配置文件_config.yml，翻到最后，找到下面的文件进行修改下面内容。<br><img src="https://s2.ax1x.com/2019/11/29/QAwjr4.png" alt="QAwjr4.png"><br><img src="https://s2.ax1x.com/2019/11/29/QA0wWV.jpg" alt="QA0wWV.jpg"><br>关于仓库的完整路径，你可以登陆自己的GitHub账号，然后右击仓库，选择复制链接地址。<br>小编在此特别提醒在yml格式中，冒号后边必须加一个空格，它的语法要求十分严格，不然会报错，小编当时就出现了错误，绕了一大圈才解决，如果你出现下面错误十有八九就是语法错误。<br><img src="https://s2.ax1x.com/2019/11/29/QA0goR.png" alt="QA0goR.png"></p>
<h2 id="十、安装部署插件"><a href="#十、安装部署插件" class="headerlink" title="十、安装部署插件"></a>十、安装部署插件</h2><p>安装Git部署插件，输入下面的命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save  &#x2F;&#x2F;安装Git部署插件</span></pre></td></tr></table></figure>

<h2 id="十一、生成与部署"><a href="#十一、生成与部署" class="headerlink" title="十一、生成与部署"></a>十一、生成与部署</h2><p>此时输入下面三条命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo clean  &#x2F;&#x2F;清除缓存命令</span></pre></td></tr><tr><td class="code"><pre><span class="line">hexo g &#x3D;&#x3D; hexo generate  &#x2F;&#x2F;生成</span></pre></td></tr><tr><td class="code"><pre><span class="line">hexo d &#x3D;&#x3D; hexo deploy   &#x2F;&#x2F;部署</span></pre></td></tr></table></figure>
<p>此时恭喜你，你的博客已经上线了，快访问你的博客吧。博客地址是你放置个人网站的仓库路径，即 <a href="http://xxxx.github.io" target="_blank" rel="noopener">http://xxxx.github.io</a> 。我的xxxx代表的是我当时创建仓库的名字，也是我GitHub的名字。</p>
<h1 id="0X04主题"><a href="#0X04主题" class="headerlink" title="0X04主题"></a><strong><em>0X04主题</em></strong></h1><p>因为Hexo的默认主题是比较单调的，所以当然要去换一个个性十足的主题啦。首先进入blog文件夹中，打开Git bash在里面输入下面代码，这里小编以自己下载的主题为例子，小编用的主题是Solar。灰常的nice!</p>
<h2 id="一、下载主题。"><a href="#一、下载主题。" class="headerlink" title="一、下载主题。"></a>一、下载主题。</h2><p>先去Hexo网站中找自己喜欢的主题，然后去GitHub中找到这个主题，复制这个主题的网址链接。在blog文件夹中打开Bash Here输入下面的命令然后在你的themes文件夹中就会出现一<br>个solar文件。<br>Hexo网址：<a href="https://hexo.io/" target="_blank" rel="noopener">https://hexo.io/</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;tzvetkov75&#x2F;solar-theme-hexo themes&#x2F;solar</span></pre></td></tr></table></figure>
<h2 id="二、修改站点配置文件"><a href="#二、修改站点配置文件" class="headerlink" title="二、修改站点配置文件"></a>二、修改站点配置文件</h2><p>打开blog文件下的站点配置文件，找到theme选项配置改为我们下载好的Solar主题，再次强调，冒号后面要加空格。<br><img src="https://s2.ax1x.com/2019/11/29/QABFkn.jpg" alt="QABFkn.jpg"></p>
<h2 id="三、本地查看"><a href="#三、本地查看" class="headerlink" title="三、本地查看"></a>三、本地查看</h2><p>输入下面命令，用localhost:4000在本地访问，自己先偷偷欣赏下效果。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo server --debug</span></pre></td></tr></table></figure>
<h2 id="四、生成发布"><a href="#四、生成发布" class="headerlink" title="四、生成发布"></a>四、生成发布</h2><p>输入生成和发布命令，发布到自己的博客网站上</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo generate</span></pre></td></tr><tr><td class="code"><pre><span class="line">hexo deploy</span></pre></td></tr></table></figure>
<h1 id="0X05总结"><a href="#0X05总结" class="headerlink" title="0X05总结"></a><strong><em>0X05总结</em></strong></h1><p>小编第一次搭建博客平台，由于自己是小白，没有任何经验所以在搭建的过程中踩了一次又一次的坑，但最终还是搭建起来了，不过还有一些后续的东西需要部署。关于如何绑定域名在此不多做介绍，因为我自己没有做这个环节。小编利用晚上的时间整理出这篇文章，希望能够帮助到需要搭建博客平台的你。</p>
<p>参考文章：<a href="https://zhuanlan.zhihu.com/p/26625249" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/26625249</a></p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
</search>
