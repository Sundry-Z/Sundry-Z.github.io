<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Sundry_Z</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://sundry-z.github.io/"/>
  <updated>2020-01-08T07:15:48.116Z</updated>
  <id>https://sundry-z.github.io/</id>
  
  <author>
    <name>Sundry_Z</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何利用GitHub-Hexo搭建个人博客</title>
    <link href="https://sundry-z.github.io/2019/12/01/%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8GitHub-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://sundry-z.github.io/2019/12/01/%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8GitHub-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</id>
    <published>2019-12-01T04:04:10.000Z</published>
    <updated>2020-01-08T07:15:48.116Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0X01前言"><a href="#0X01前言" class="headerlink" title="0X01前言"></a><strong><em>0X01前言</em></strong></h1><h2 id="一、博客"><a href="#一、博客" class="headerlink" title="一、博客"></a>一、博客</h2><p>  &emsp;&emsp;Blog是以网络作为载体，简易迅速便捷地发布自己的心得，及时有效轻松地与他人进行交流，集丰富多彩的个性化展示于一体的综合性平台。Blog是继Email、BBS、ICQ、之后出现的第四种网络交流方式，至今已十分受大家的欢迎，是网络时代的个人“读者文摘”，是以超级链接为入口的网络日记，是代表着新的生活方式和新的工作方式，更代表着新的学习方式。具体说来，博客这个概念解释为使用特定的软件，在网络上出版，发表和张贴个人文章的人。</p><h2 id="二、GitHub"><a href="#二、GitHub" class="headerlink" title="二、GitHub"></a>二、GitHub</h2><p>  &emsp;&emsp;GitHub是通过Git进行版本控制的软件源代码托管服务平台，由GitHub公司（曾称Logical Awesome）的开发者Chris Wanstrath、PJ Hyett和Tom Preston-Werner使用Ruby  On Rails编写而成。GitHub提供付费账户和免费账户。这两种账户都可以创建公开或私有的代码仓库，但付费用户支持更多功能。根据在2009年的Git用户调查，GitHub是最流行的Git访问站点。除了允许个人和组织创建和访问保管中的代码以外，它也提供了一些方便社会化共同软件开发的功能，即一般人口中的社群功能，包括允许用户追踪其他用户、组织、软件库的动态，对软件代码的改动和bug提出评论等。GitHub也提供了图表功能，用于概观显示开发者们怎样在代码库上工作以及软件的开发活跃程度。GitHub已经成为了世界上最大的代码存放网站和开源社区。</p><h2 id="三、Hexo"><a href="#三、Hexo" class="headerlink" title="三、Hexo"></a>三、Hexo</h2><p>  &emsp;&emsp;Hexo是一款基于Node.js的静态博客框架，依赖少，易于安装使用，可以方便的生成静态网页。托管在GitHub和Heroku上，Hexo是一个快速、简洁且高效的博客框架。它使用Markdown解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><h2 id="四、Git"><a href="#四、Git" class="headerlink" title="四、Git"></a>四、Git</h2><p>  &emsp;&emsp;Git是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理。Git 是Linus Torvalds为了帮助管理Linux 内核开发而开发的一个开放源码的版本控制软件。分布式相比于集中式的最大区别在于开发者可以提交到本地，每个开发者通过克隆（git clone），在本地机器上拷贝一个完整的Git仓库。</p><h2 id="五、Node-js"><a href="#五、Node-js" class="headerlink" title="五、Node.js"></a>五、Node.js</h2><p>  &emsp;&emsp;Node.js是能够在服务器端运行JavaScript的开源代码、跨平台JavaScript运行环境。Node.js采用Google开发的V8运行代码，使用事件驱动、非阻塞和异步输入输出模型等技术来提高性能，可优化应用程序的传输量和规模。这些技术通常用于数据密集的即时应用程序。</p><h1 id="0X02准备"><a href="#0X02准备" class="headerlink" title="0X02准备"></a><strong><em>0X02准备</em></strong></h1><h2 id="一、安装Git"><a href="#一、安装Git" class="headerlink" title="一、安装Git"></a>一、安装Git</h2><p>Git下载网址：<a href="https://git-scm.com/download/win" target="_blank" rel="noopener">https://git-scm.com/download/win</a><br>Git使用教程网址：<a href="https://www.liaoxuefeng.com/wiki/896043488029600" target="_blank" rel="noopener">https://www.liaoxuefeng.com/wiki/896043488029600</a><br>本文以Windows安装64位的为例，从网站下载完安装包后点击安装，安装完成，打开软件，出现下图的界面则说明Git安装成功。<br><img src="https://s2.ax1x.com/2019/11/29/QAdRB9.jpg" alt="QAdRB9.jpg"></p><h2 id="二、安装Node-js及环境变量npm的安装"><a href="#二、安装Node-js及环境变量npm的安装" class="headerlink" title="二、安装Node.js及环境变量npm的安装"></a>二、安装Node.js及环境变量npm的安装</h2><p>Node.js下载地址：<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">https://nodejs.org/en/download/</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">node -v  &#x2F;&#x2F;安装完成后，打开CMD，输入该命令检测Ndoe安装是否成功，成功如下图所示。</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">npm -v  &#x2F;&#x2F;打开CMD,输入该命令，检测npm环境安装是否成功，成功如下图所示。</span></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/11/30/QVv3Xq.png" alt="QVv3Xq.png"><br><a href="https://imgse.com/i/QVvY7T" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/11/30/QVvY7T.md.png" alt="QVvY7T.md.png"></a></p><h1 id="0X03搭建"><a href="#0X03搭建" class="headerlink" title="0X03搭建"></a><strong><em>0X03搭建</em></strong></h1><h2 id="一、注册账号"><a href="#一、注册账号" class="headerlink" title="一、注册账号"></a>一、注册账号</h2><p>在GitHub上注册一个自己的账号，具体注册操作不演示了，相信小伙伴们都会。<br>GitHub网站地址：<a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a></p><h2 id="二、在GitHub中的New-repository创建新仓库，仓库名字格式为-用户名-github-io"><a href="#二、在GitHub中的New-repository创建新仓库，仓库名字格式为-用户名-github-io" class="headerlink" title="二、在GitHub中的New repository创建新仓库，仓库名字格式为:用户名.github.io"></a>二、在GitHub中的New repository创建新仓库，仓库名字格式为:用户名.github.io</h2><p><a href="https://imgse.com/i/QVvsnx" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/11/30/QVvsnx.md.png" alt="QVvsnx.md.png"></a><br><a href="https://imgse.com/i/QVv2ND" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/11/30/QVv2ND.md.png" alt="QVv2ND.md.png"></a></p><h2 id="三、打开Git-bash-在桌面右键选择Git-bash-Here或者在菜单中搜索Git-bash-，输入以下命令。"><a href="#三、打开Git-bash-在桌面右键选择Git-bash-Here或者在菜单中搜索Git-bash-，输入以下命令。" class="headerlink" title="三、打开Git bash(在桌面右键选择Git bash Here或者在菜单中搜索Git bash)，输入以下命令。"></a>三、打开Git bash(在桌面右键选择Git bash Here或者在菜单中搜索Git bash)，输入以下命令。</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">git config --global user.name  &#x2F;&#x2F;&quot;你GitHub用户名&quot; 设置user.name配置信息</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">git config --global user.email &#x2F;&#x2F;&quot;你GitHub注册邮箱&quot; 设置user.email配置信息</span></pre></td></tr></table></figure><h2 id="四、用Git-bash生成ssh密钥文件"><a href="#四、用Git-bash生成ssh密钥文件" class="headerlink" title="四、用Git bash生成ssh密钥文件"></a>四、用Git bash生成ssh密钥文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你的GitHub注册邮箱&quot;</span></pre></td></tr></table></figure><p>此时在你的本地（默认在C盘）会生成一个.ssh文件夹，里面包含id_rsa和id_rsa.pub两个文件。打开id_rsa.pub将里面的内容全部复制到GitHub的SSH and GPG keys中。<br>(ps:在这里小编推荐一个在windows中十分好用的文件搜索软件：Everything)<br><img src="https://s2.ax1x.com/2019/11/29/QAdumd.png" alt="QAdumd.png"><br><img src="https://s2.ax1x.com/2019/11/29/QAaai6.png" alt="QAaai6.png"><br><img src="https://s2.ax1x.com/2019/11/29/QAaDQe.png" alt="QAaDQe.png"><br><img src="https://s2.ax1x.com/2019/11/29/QAaxlF.png" alt="QAaxlF.png"><br><img src="https://s2.ax1x.com/2019/11/29/QAdkY6.png" alt="QAdkY6.png"></p><h2 id="五、在Git-Bash中输入下面命令检测GitHub公钥设置是否成功"><a href="#五、在Git-Bash中输入下面命令检测GitHub公钥设置是否成功" class="headerlink" title="五、在Git Bash中输入下面命令检测GitHub公钥设置是否成功"></a>五、在Git Bash中输入下面命令检测GitHub公钥设置是否成功</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">ssh git@github.com</span></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/11/29/QAwhrQ.png" alt="QAwhrQ.png"><br>此时说明GitHub公钥设置成功。</p><h2 id="六、安装Hexo"><a href="#六、安装Hexo" class="headerlink" title="六、安装Hexo"></a>六、安装Hexo</h2><p>建立一个文件夹，这里小编建议以Blog命名，将Hexo框架与以后你自己发布的网页都放在这个文件夹中。进入文件夹后，在文件夹内打开CMD。在此特别强调，一定要在刚创建的Blog文件夹中打开。输入下面的命令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli  &#x2F;&#x2F;安装Hexo</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">hexo init blog  &#x2F;&#x2F;初始化我们的博客</span></pre></td></tr></table></figure><h2 id="七、安装完成后，按顺序输入下面代码，检测我们的网站雏形。"><a href="#七、安装完成后，按顺序输入下面代码，检测我们的网站雏形。" class="headerlink" title="七、安装完成后，按顺序输入下面代码，检测我们的网站雏形。"></a>七、安装完成后，按顺序输入下面代码，检测我们的网站雏形。</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">hexo new test_my_site</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">hexo g</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">hexo s</span></pre></td></tr></table></figure><h2 id="八、本地查看"><a href="#八、本地查看" class="headerlink" title="八、本地查看"></a>八、本地查看</h2><p>完成上面的操作后，祝贺你，已经可以在本地打开你的博客平台了。打开浏览器输入localhost:4000,此时可以看到你博客平台的模样。但是搭建博客肯定不是给自己欣赏的啊，所以要下面要做的是推送网站，顾名思义就是发布网站。</p><h2 id="九、将我们的Hexo与GitHub关联起来，打开站点的配置文件-config-yml，翻到最后，找到下面的文件进行修改下面内容。"><a href="#九、将我们的Hexo与GitHub关联起来，打开站点的配置文件-config-yml，翻到最后，找到下面的文件进行修改下面内容。" class="headerlink" title="九、将我们的Hexo与GitHub关联起来，打开站点的配置文件_config.yml，翻到最后，找到下面的文件进行修改下面内容。"></a>九、将我们的Hexo与GitHub关联起来，打开站点的配置文件_config.yml，翻到最后，找到下面的文件进行修改下面内容。</h2><p><img src="https://s2.ax1x.com/2019/11/29/QAwjr4.png" alt="QAwjr4.png"><br><img src="https://s2.ax1x.com/2019/11/29/QA0wWV.jpg" alt="QA0wWV.jpg"><br>关于仓库的完整路径，你可以登陆自己的GitHub账号，然后右击仓库，选择复制链接地址。<br>小编在此特别提醒在yml格式中，冒号后边必须加一个空格，它的语法要求十分严格，不然会报错，小编当时就出现了错误，绕了一大圈才解决，如果你出现下面错误十有八九就是语法错误。<br><img src="https://s2.ax1x.com/2019/11/29/QA0goR.png" alt="QA0goR.png"></p><h2 id="十、安装Git部署插件，输入下面的命令"><a href="#十、安装Git部署插件，输入下面的命令" class="headerlink" title="十、安装Git部署插件，输入下面的命令"></a>十、安装Git部署插件，输入下面的命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save  &#x2F;&#x2F;安装Git部署插件</span></pre></td></tr></table></figure><h2 id="十一、此时输入下面三条命令"><a href="#十一、此时输入下面三条命令" class="headerlink" title="十一、此时输入下面三条命令"></a>十一、此时输入下面三条命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">hexo clean  &#x2F;&#x2F;清除缓存命令</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">hexo g &#x3D;&#x3D; hexo generate  &#x2F;&#x2F;生成</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">hexo d &#x3D;&#x3D; hexo deploy   &#x2F;&#x2F;部署</span></pre></td></tr></table></figure><p>此时恭喜你，你的博客已经上线了，快访问你的博客吧。博客地址是你放置个人网站的仓库路径，即 <a href="http://xxxx.github.io" target="_blank" rel="noopener">http://xxxx.github.io</a> 。我的xxxx代表的是我当时创建仓库的名字，也是我GitHub的名字。</p><h1 id="0X04主题"><a href="#0X04主题" class="headerlink" title="0X04主题"></a><strong><em>0X04主题</em></strong></h1><p>因为Hexo的默认主题是比较单调的，所以当然要去换一个个性十足的主题啦。首先进入blog文件夹中，打开Git bash在里面输入下面代码，这里小编以自己下载的主题为例子，小编用的主题是Solar。灰常的nice!</p><h2 id="一、下载主题。"><a href="#一、下载主题。" class="headerlink" title="一、下载主题。"></a>一、下载主题。</h2><p>先去Hexo网站中找自己喜欢的主题，然后去GitHub中找到这个主题，复制这个主题的网址链接。在blog文件夹中打开Bash Here输入下面的命令然后在你的themes文件夹中就会出现一<br>个solar文件。<br>Hexo网址：<a href="https://hexo.io/" target="_blank" rel="noopener">https://hexo.io/</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;tzvetkov75&#x2F;solar-theme-hexo themes&#x2F;solar</span></pre></td></tr></table></figure><h2 id="二、修改站点配置文件"><a href="#二、修改站点配置文件" class="headerlink" title="二、修改站点配置文件"></a>二、修改站点配置文件</h2><p>打开blog文件下的站点配置文件，找到theme选项配置改为我们下载好的Solar主题，再次强调，冒号后面要加空格。<br><img src="https://s2.ax1x.com/2019/11/29/QABFkn.jpg" alt="QABFkn.jpg"></p><h2 id="三、本地查看"><a href="#三、本地查看" class="headerlink" title="三、本地查看"></a>三、本地查看</h2><p>输入下面命令，用localhost:4000在本地访问，自己先偷偷欣赏下效果。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">hexo server --debug</span></pre></td></tr></table></figure><h2 id="四、输入生成和发布命令，发布到自己的博客网站上"><a href="#四、输入生成和发布命令，发布到自己的博客网站上" class="headerlink" title="四、输入生成和发布命令，发布到自己的博客网站上"></a>四、输入生成和发布命令，发布到自己的博客网站上</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">hexo generate</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">hexo deploy</span></pre></td></tr></table></figure><h1 id="0X05总结"><a href="#0X05总结" class="headerlink" title="0X05总结"></a><strong><em>0X05总结</em></strong></h1><p>小编第一次搭建博客平台，由于自己是小白，没有任何经验所以在搭建的过程中踩了一次又一次的坑，但最终还是搭建起来了，不过还有一些后续的东西需要部署。关于如何绑定域名在此不多做介绍，因为我自己没有做这个环节。小编利用晚上的时间整理出这篇文章，希望能够帮助到需要搭建博客平台的你。</p><p>本文作者：Sundry-Z<br>欢迎关注个人微信公众号：Sundry_杂项<br>参考文章：<a href="https://zhuanlan.zhihu.com/p/26625249" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/26625249</a><br>版权声明: 本博客所有文章除特别声明外，均采用 CC BY-NC-SA 4.0 许可协议。转载请注明来自Sundry-Z！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;0X01前言&quot;&gt;&lt;a href=&quot;#0X01前言&quot; class=&quot;headerlink&quot; title=&quot;0X01前言&quot;&gt;&lt;/a&gt;&lt;strong&gt;&lt;em&gt;0X01前言&lt;/em&gt;&lt;/strong&gt;&lt;/h1&gt;&lt;h2 id=&quot;一、博客&quot;&gt;&lt;a href=&quot;#一、博客&quot; c
      
    
    </summary>
    
    
      <category term="技术" scheme="https://sundry-z.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="【博客】 【Hexo】" scheme="https://sundry-z.github.io/tags/%E3%80%90%E5%8D%9A%E5%AE%A2%E3%80%91-%E3%80%90Hexo%E3%80%91/"/>
    
  </entry>
  
</feed>
